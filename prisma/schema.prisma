generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activities_config {
  club_id                      BigInt                                      @id @db.UnsignedBigInt
  autopay_on_booking           activities_config_autopay_on_booking        @default(N)
  active_on_future_bookings    activities_config_active_on_future_bookings @default(N)
  unpayed_is_debt              activities_config_unpayed_is_debt           @default(N)
  app_enabled                  activities_config_app_enabled               @default(N)
  allow_booking_on_hold        activities_config_allow_booking_on_hold     @default(N)
  allow_instant_payment        activities_config_allow_instant_payment     @default(Y)
  expire_bookings              activities_config_expire_bookings           @default(N)
  tl_hours                     Int                                         @default(0) @db.SmallInt
  max_ap_hours                 Int                                         @default(0) @db.SmallInt
  customer_enabled             activities_config_customer_enabled          @default(N)
  hide_club_info               activities_config_hide_club_info            @default(N)
  teacher_listing_pre_minutes  Int?                                        @db.SmallInt
  teacher_listing_post_minutes Int?                                        @db.SmallInt
  show_all_bookings            activities_config_show_all_bookings         @default(Y)
  teacher_can_book             activities_config_teacher_can_book          @default(N)
  teacher_can_void             activities_config_teacher_can_void          @default(N)
  request_uniform              activities_config_request_uniform           @default(N)
  renew_bookings               activities_config_renew_bookings            @default(N)
  hide_instances_summary       activities_config_hide_instances_summary    @default(N)
  allow_user_cancel            activities_config_allow_user_cancel         @default(Y)
}

model activity {
  id                             BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                        BigInt                          @db.UnsignedBigInt
  name                           String                          @db.VarChar(64)
  local_start_date               DateTime                        @db.Date
  local_end_date                 DateTime                        @db.Date
  category_id                    BigInt?                         @db.UnsignedBigInt
  description                    String?                         @db.Text
  frequency                      activity_frequency              @default(WEEKLY)
  restart_period                 activity_restart_period         @default(MONTH)
  prebook_schedule               activity_prebook_schedule       @default(N)
  flexible_schedule              activity_flexible_schedule      @default(N)
  image                          String?                         @db.VarChar(128)
  active                         activity_active                 @default(N)
  local_creation_datetime        DateTime                        @db.DateTime(0)
  app_enabled                    activity_app_enabled            @default(N)
  proportional_payment           activity_proportional_payment   @default(Y)
  repeat_monthly                 activity_repeat_monthly         @default(N)
  allow_late_start               activity_allow_late_start       @default(Y)
  previous_activity_id           BigInt?                         @db.UnsignedBigInt
  allow_booking_on_hold          activity_allow_booking_on_hold  @default(Y)
  allow_instant_payment          activity_allow_instant_payment  @default(Y)
  expire_bookings                activity_expire_bookings        @default(N)
  tl_hours                       Int                             @default(0) @db.SmallInt
  max_ap_hours                   Int                             @default(0) @db.SmallInt
  teacher_listing_pre_minutes    Int?                            @db.SmallInt
  teacher_listing_post_minutes   Int?                            @db.SmallInt
  show_all_bookings              activity_show_all_bookings      @default(N)
  teacher_can_book               activity_teacher_can_book       @default(N)
  teacher_can_void               activity_teacher_can_void       @default(N)
  book_only_once                 activity_book_only_once         @default(N)
  restricted_to_customer_code_id BigInt?                         @db.UnsignedBigInt
  request_uniform                activity_request_uniform        @default(N)
  renew_bookings                 activity_renew_bookings         @default(N)
  hide_instances_summary         activity_hide_instances_summary @default(N)
  show_after_end_date            activity_show_after_end_date    @default(N)
  allow_user_cancel              activity_allow_user_cancel      @default(Y)
  club                           club                            @relation(fields: [club_id], references: [id])
  activity_booking               activity_booking[]
  activity_detail                activity_detail[]
  activity_instance              activity_instance[]
  activity_invoice_type_config   activity_invoice_type_config?
  activity_price                 activity_price[]
  activity_teacher               activity_teacher[]
  magnus_activity_config         magnus_activity_config?

  @@index([club_id], name: "club_id")
  @@index([previous_activity_id], name: "previous_activity_id")
}

model activity_booking {
  id                          BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  activity_id                 BigInt                        @db.UnsignedBigInt
  activity_price_id           BigInt                        @db.UnsignedBigInt
  period                      activity_booking_period       @default(MONTH)
  period_amount               Int                           @default(1) @db.UnsignedSmallInt
  customer_code_id            BigInt?                       @db.UnsignedBigInt
  user_id                     BigInt?                       @db.UnsignedBigInt
  local_start_date            DateTime                      @db.Date
  local_end_date              DateTime                      @db.Date
  amount                      Decimal                       @db.Decimal(20, 2)
  currency_id                 BigInt                        @db.UnsignedBigInt
  amount_payed                Decimal                       @db.Decimal(20, 2)
  status                      activity_booking_status?
  local_creation_datetime     DateTime                      @db.DateTime(0)
  booked_by                   activity_booking_booked_by    @default(club)
  local_tl_datetime           DateTime?                     @db.DateTime(0)
  boleta                      String?                       @db.VarChar(32)
  fee_amount                  Decimal                       @default(0.00) @db.Decimal(20, 2)
  total_instances             Int?                          @db.UnsignedSmallInt
  uniform_fee_amount          Decimal                       @default(0.00) @db.Decimal(20, 2)
  next_activity_booking_id    BigInt?                       @db.UnsignedBigInt
  activity                    activity                      @relation(fields: [activity_id], references: [id])
  activity_price              activity_price                @relation(fields: [activity_price_id], references: [id])
  currency                    currency                      @relation(fields: [currency_id], references: [id])
  user                        user?                         @relation(fields: [user_id], references: [id])
  activity_booking_action     activity_booking_action[]
  activity_booking_attendance activity_booking_attendance[]
  activity_booking_detail     activity_booking_detail[]
  activity_booking_instance   activity_booking_instance[]
  activity_booking_uniform    activity_booking_uniform?

  @@index([activity_id], name: "activity_id")
  @@index([activity_price_id], name: "activity_price_id")
  @@index([currency_id], name: "currency_id")
  @@index([local_creation_datetime], name: "local_creation_datetime")
  @@index([user_id], name: "user_id")
}

model activity_booking_action {
  id                  BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  admin_id            BigInt?                        @db.UnsignedBigInt
  user_id             BigInt?                        @db.UnsignedBigInt
  activity_booking_id BigInt?                        @db.UnsignedBigInt
  datetime            DateTime                       @db.DateTime(0)
  action              activity_booking_action_action @default(CREATED)
  comment             String?                        @db.VarChar(64)
  activity_booking    activity_booking?              @relation(fields: [activity_booking_id], references: [id])
  admin               admin?                         @relation(fields: [admin_id], references: [id])
  user                user?                          @relation(fields: [user_id], references: [id])

  @@index([activity_booking_id], name: "activity_booking_id")
  @@index([admin_id], name: "admin_id")
  @@index([user_id], name: "user_id")
}

model activity_booking_attendance {
  id                  BigInt                               @id @default(autoincrement()) @db.UnsignedBigInt
  activity_booking_id BigInt                               @db.UnsignedBigInt
  local_datetime_in   DateTime                             @db.DateTime(0)
  deleted             activity_booking_attendance_deleted? @default(N)
  activity_booking    activity_booking                     @relation(fields: [activity_booking_id], references: [id])

  @@index([activity_booking_id], name: "activity_booking_id")
}

model activity_booking_attendance_action {
  id                             BigInt                                    @id @default(autoincrement()) @db.UnsignedBigInt
  admin_id                       BigInt?                                   @db.UnsignedBigInt
  user_id                        BigInt?                                   @db.UnsignedBigInt
  activity_booking_attendance_id BigInt                                    @db.UnsignedBigInt
  datetime                       DateTime                                  @db.DateTime(0)
  action                         activity_booking_attendance_action_action @default(Y)
  comment                        String?                                   @db.VarChar(64)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model activity_booking_data {
  activity_booking_id     BigInt @db.UnsignedBigInt
  activity_data_config_id BigInt @db.UnsignedBigInt
  value                   String @db.VarChar(256)

  @@ignore
}

model activity_booking_detail {
  activity_booking_id BigInt           @db.UnsignedBigInt
  activity_detail_id  BigInt           @db.UnsignedBigInt
  activity_booking    activity_booking @relation(fields: [activity_booking_id], references: [id])
  activity_detail     activity_detail  @relation(fields: [activity_detail_id], references: [id])

  @@id([activity_booking_id, activity_detail_id])
  @@index([activity_detail_id], name: "activity_detail_id")
}

model activity_booking_instance {
  activity_booking_id  BigInt                               @db.UnsignedBigInt
  activity_instance_id BigInt                               @db.UnsignedBigInt
  attendance           activity_booking_instance_attendance @default(NR)
  activity_booking     activity_booking                     @relation(fields: [activity_booking_id], references: [id])
  activity_instance    activity_instance                    @relation(fields: [activity_instance_id], references: [id])

  @@id([activity_booking_id, activity_instance_id])
  @@index([activity_instance_id], name: "activity_detail_instance_id")
}

model activity_booking_instance_attendance_action {
  id                   BigInt                                             @id @default(autoincrement()) @db.UnsignedBigInt
  admin_id             BigInt?                                            @db.UnsignedBigInt
  user_id              BigInt?                                            @db.UnsignedBigInt
  activity_booking_id  BigInt                                             @db.UnsignedBigInt
  activity_instance_id BigInt                                             @db.UnsignedBigInt
  datetime             DateTime                                           @db.DateTime(0)
  action               activity_booking_instance_attendance_action_action @default(Y)
  comment              String?                                            @db.VarChar(64)
}

model activity_booking_uniform {
  activity_booking_id BigInt                             @id @db.UnsignedBigInt
  size                activity_booking_uniform_size?
  type                activity_booking_uniform_type      @default(regular)
  gender              activity_booking_uniform_gender    @default(M)
  number              Int?                               @db.TinyInt
  name                String?                            @db.VarChar(32)
  amount              Decimal                            @db.Decimal(20, 2)
  currency_id         BigInt                             @db.UnsignedBigInt
  status              activity_booking_uniform_status    @default(BOOKED)
  requested           activity_booking_uniform_requested @default(N)
  uniform_request_id  BigInt?                            @db.UnsignedBigInt
  activity_booking    activity_booking                   @relation(fields: [activity_booking_id], references: [id])
  currency            currency                           @relation(fields: [currency_id], references: [id])

  @@index([currency_id], name: "currency_id")
}

model activity_category {
  id    BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name  String @db.VarChar(64)
  image String @default("/images/activities/generic.png") @db.VarChar(128)
}

model activity_data_config {
  id          BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  activity_id BigInt                         @db.UnsignedBigInt
  name        String                         @db.VarChar(64)
  description String?                        @db.VarChar(256)
  example     String?                        @db.VarChar(64)
  type        activity_data_config_type      @default(DOUBLE)
  decimals    Int?                           @db.TinyInt
  mandatory   activity_data_config_mandatory @default(N)
  active      activity_data_config_active    @default(Y)
  sort        Int                            @default(1) @db.TinyInt
}

model activity_detail {
  id                      BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  activity_id             BigInt                    @db.UnsignedBigInt
  day_of_week             Int                       @db.UnsignedTinyInt
  local_start_time        DateTime                  @db.Time(0)
  local_end_time          DateTime                  @db.Time(0)
  capacity                Int?                      @db.UnsignedSmallInt
  status                  activity_detail_status    @default(ACTIVE)
  description             String?                   @db.VarChar(128)
  activity                activity                  @relation(fields: [activity_id], references: [id])
  activity_booking_detail activity_booking_detail[]
  activity_instance       activity_instance[]

  @@index([activity_id], name: "activity_id")
}

model activity_fee_charge {
  id                  BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  club_id             BigInt                     @db.UnsignedBigInt
  user_id             BigInt                     @db.UnsignedBigInt
  local_date          DateTime                   @db.Date
  amount              Decimal?                   @db.Decimal(20, 2)
  activity_booking_id BigInt?
  status              activity_fee_charge_status @default(BOOKED)
  club                club                       @relation(fields: [club_id], references: [id])
  user                user                       @relation(fields: [user_id], references: [id])

  @@index([club_id], name: "club_id")
  @@index([user_id], name: "user_id")
}

model activity_instance {
  id                        BigInt                      @id @default(autoincrement()) @db.UnsignedBigInt
  activity_id               BigInt                      @db.UnsignedBigInt
  activity_detail_id        BigInt?                     @db.UnsignedBigInt
  local_start_datetime      DateTime                    @db.DateTime(0)
  local_end_datetime        DateTime                    @db.DateTime(0)
  capacity                  Int?                        @db.UnsignedSmallInt
  status                    activity_instance_status    @default(ACTIVE)
  activity_detail           activity_detail?            @relation(fields: [activity_detail_id], references: [id])
  activity                  activity                    @relation(fields: [activity_id], references: [id])
  activity_booking_instance activity_booking_instance[]

  @@index([activity_detail_id], name: "activity_detail_id")
  @@index([activity_id], name: "activity_id")
}

model activity_invoice_type_config {
  activity_id     BigInt       @id @db.UnsignedBigInt
  invoice_type_id BigInt       @db.UnsignedBigInt
  activity        activity     @relation(fields: [activity_id], references: [id])
  invoice_type    invoice_type @relation(fields: [invoice_type_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model activity_price {
  id                                 BigInt                                 @id @default(autoincrement()) @db.UnsignedBigInt
  activity_id                        BigInt                                 @db.UnsignedBigInt
  name                               String                                 @db.VarChar(64)
  frequency                          String?
  description                        String?                                @db.Text
  price_for                          activity_price_price_for?
  amount                             Decimal?                               @db.Decimal(20, 2)
  instance_amount                    Decimal?                               @db.Decimal(20, 2)
  currency_id                        BigInt?                                @db.UnsignedBigInt
  customer_code_id                   BigInt?                                @db.UnsignedBigInt
  active                             activity_price_active                  @default(N)
  quota_frequency                    activity_price_quota_frequency?
  quota_frequency_amount             Int?                                   @db.UnsignedSmallInt
  quota                              Int?                                   @db.UnsignedSmallInt
  promo_amount                       Decimal?                               @db.Decimal(20, 2)
  promo_count                        Int?                                   @db.UnsignedSmallInt
  promo_window                       activity_price_promo_window?
  limit_period_unit                  activity_price_limit_period_unit?
  limit_period_amount                Int?                                   @db.UnsignedSmallInt
  fixed_instances                    Int?                                   @db.UnsignedSmallInt
  app_enabled                        activity_price_app_enabled             @default(Y)
  enroll_fee_period_unit             activity_price_enroll_fee_period_unit  @default(NO)
  enroll_fee_period_amount           Int?                                   @db.UnsignedSmallInt
  proportional_unit                  activity_price_proportional_unit       @default(INSTANCE)
  uniform_included_in_fee            activity_price_uniform_included_in_fee @default(Y)
  reschedule_window_minutes          Int                                    @default(0) @db.SmallInt
  activity                           activity                               @relation(fields: [activity_id], references: [id])
  club_customer_code                 club_customer_code?                    @relation(fields: [customer_code_id], references: [id])
  activity_booking                   activity_booking[]
  activity_price_amount              activity_price_amount[]
  activity_price_fee                 activity_price_fee[]
  activity_price_invoice_type_config activity_price_invoice_type_config?
  activity_price_uniform_fee         activity_price_uniform_fee[]

  @@index([activity_id], name: "activity_id")
  @@index([customer_code_id], name: "customer_code_id")
}

model activity_price_amount {
  activity_price_id BigInt                          @db.UnsignedBigInt
  frequency         activity_price_amount_frequency
  customer_code_id  BigInt                          @default(0) @db.UnsignedBigInt
  amount            Decimal                         @db.Decimal(20, 2)
  currency_id       BigInt                          @db.UnsignedBigInt
  activity_price    activity_price                  @relation(fields: [activity_price_id], references: [id])
  currency          currency                        @relation(fields: [currency_id], references: [id])

  @@id([activity_price_id, frequency, customer_code_id])
  @@index([currency_id], name: "currency_id")
}

model activity_price_fee {
  activity_price_id BigInt         @db.UnsignedBigInt
  customer_code_id  BigInt         @default(0) @db.UnsignedBigInt
  amount            Decimal        @db.Decimal(20, 2)
  currency_id       BigInt         @db.UnsignedBigInt
  activity_price    activity_price @relation(fields: [activity_price_id], references: [id])
  currency          currency       @relation(fields: [currency_id], references: [id])

  @@id([activity_price_id, customer_code_id])
  @@index([currency_id], name: "currency_id")
}

model activity_price_invoice_type_config {
  activity_price_id BigInt         @id @db.UnsignedBigInt
  invoice_type_id   BigInt         @db.UnsignedBigInt
  activity_price    activity_price @relation(fields: [activity_price_id], references: [id])
  invoice_type      invoice_type   @relation(fields: [invoice_type_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model activity_price_uniform_fee {
  activity_price_id BigInt         @db.UnsignedBigInt
  customer_code_id  BigInt         @default(0) @db.UnsignedBigInt
  amount            Decimal        @db.Decimal(20, 2)
  currency_id       BigInt         @db.UnsignedBigInt
  activity_price    activity_price @relation(fields: [activity_price_id], references: [id])
  currency          currency       @relation(fields: [currency_id], references: [id])

  @@id([activity_price_id, customer_code_id])
  @@index([currency_id], name: "currency_id")
}

model activity_teacher {
  id                   BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id              BigInt   @db.UnsignedBigInt
  activity_id          BigInt   @db.UnsignedBigInt
  activity_detail_id   BigInt?
  activity_instance_id BigInt?
  activity             activity @relation(fields: [activity_id], references: [id])
  user                 user     @relation(fields: [user_id], references: [id])

  @@index([activity_id], name: "activity_id")
  @@index([user_id], name: "user_id")
}

model admin {
  id                               BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  email                            String                             @unique @db.VarChar(128)
  first_name                       String                             @db.VarChar(64)
  last_name                        String                             @db.VarChar(64)
  salted_hash                      String                             @db.MediumText
  role                             admin_role                         @default(club)
  active                           admin_active                       @default(Y)
  activity_booking_action          activity_booking_action[]
  admin_payment_period             admin_payment_period[]
  booking_action                   booking_action[]
  booking_players_actions          booking_players_actions[]
  club_admin                       club_admin[]
  club_admin_base_rules            club_admin_base_rules[]
  club_admin_customer_code_allowed club_admin_customer_code_allowed[]
  club_admin_sports_allowed        club_admin_sports_allowed[]
  day_block                        day_block[]
  magnus_caja_club_admin           magnus_caja_club_admin[]
}

model admin_file {
  id                  BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name                String          @db.VarChar(128)
  category_id         BigInt          @db.UnsignedBigInt
  url                 String          @db.VarChar(256)
  type                admin_file_type @default(video)
  country_regexp      String?         @db.VarChar(255)
  country_not_regexp  String?         @db.VarChar(255)
  language_regexp     String?         @db.VarChar(256)
  language_not_regexp String?         @db.VarChar(256)
  sort                Int             @default(1) @db.SmallInt
}

model admin_file_category {
  id   BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  name String                   @db.VarChar(128)
  type admin_file_category_type @default(rent)
  sort Int                      @default(1) @db.SmallInt
}

model admin_payment_period {
  id                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  club_id              BigInt    @db.UnsignedBigInt
  admin_id             BigInt    @db.UnsignedBigInt
  local_start_datetime DateTime  @db.DateTime(0)
  local_end_datetime   DateTime? @db.DateTime(0)
  admin                admin     @relation(fields: [admin_id], references: [id])
  club                 club      @relation(fields: [club_id], references: [id])

  @@index([admin_id], name: "admin_id")
  @@index([club_id], name: "club_id")
}

model ancillary {
  id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name  String  @db.VarChar(64)
  image String? @db.VarChar(128)
}

model ancillary_booking {
  id                BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  booking_id        BigInt                   @db.UnsignedBigInt
  club_ancillary_id BigInt                   @db.UnsignedBigInt
  quantity          Int                      @db.UnsignedTinyInt
  amount            Decimal                  @db.Decimal(20, 2)
  amount_payed      Decimal                  @default(0.00) @db.Decimal(20, 2)
  status            ancillary_booking_status @default(BOOKED)
  booking           booking                  @relation(fields: [booking_id], references: [id])
  club_ancillary    club_ancillary           @relation(fields: [club_ancillary_id], references: [id])

  @@index([booking_id], name: "booking_id")
  @@index([club_ancillary_id], name: "club_ancillary_id")
}

model ancillary_price {
  club_ancillary_id BigInt                 @db.UnsignedBigInt
  price_id          BigInt                 @db.UnsignedBigInt
  amount            Decimal                @db.Decimal(20, 2)
  active            ancillary_price_active @default(Y)
  price             price                  @relation(fields: [price_id], references: [id])

  @@id([club_ancillary_id, price_id])
  @@index([price_id], name: "price_id")
}

model announcements {
  id               BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  title            String               @db.VarChar(64)
  body             String               @db.Text
  country_iso_code String               @db.Char(2)
  active           announcements_active @default(Y)
}

model appconfig {
  appid               String  @id @db.VarChar(32)
  name                String  @db.VarChar(32)
  force_country       String? @db.Char(2)
  club_ids_regexp     String  @default("^.*$") @db.VarChar(128)
  club_ids_not_regexp String  @default("^$") @db.VarChar(128)
  email_image         String? @db.VarChar(256)
  booking_ready_text  String? @db.VarChar(256)
}

model app_config {
  app_id                 String @db.VarChar(32)
  country_iso_code       String @db.Char(2)
  latest_android_version String @db.VarChar(8)
  latest_ios_version     String @db.VarChar(8)
  google_play_link       String @db.VarChar(128)
  app_store_link         String @db.VarChar(128)
  fb_link                String @db.VarChar(128)
  ig_link                String @db.VarChar(128)
  tw_link                String @db.VarChar(128)

  @@id([app_id, country_iso_code])
}

model banner {
  id                  BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  country_iso_code    String  @db.Char(2)
  club_ids_regexp     String  @default("^.*$") @db.VarChar(128)
  club_ids_not_regexp String  @default("^$") @db.VarChar(128)
  app_ids_regexp      String  @default("^easycancha$") @db.VarChar(128)
  app_ids_not_regexp  String  @default("^$") @db.VarChar(128)
  sport_id            BigInt? @db.UnsignedBigInt
  priority            Int     @default(1) @db.SmallInt
  placement           String  @default("email,summary,after_sports")
  before_text         String? @db.VarChar(256)
  image_url           String? @db.VarChar(256)
  url                 String? @db.Text
}

model block {
  id                   BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  court_id             BigInt   @db.UnsignedBigInt
  date                 DateTime @db.Date
  local_start_datetime DateTime @db.DateTime(0)
  local_end_datetime   DateTime @db.DateTime(0)
  customer_code_id     BigInt?  @db.UnsignedBigInt
  description          String?  @db.VarChar(256)
  recurrent_block_id   BigInt?  @db.UnsignedBigInt
  day_block_id         BigInt?  @db.UnsignedBigInt
  court                court    @relation(fields: [court_id], references: [id])

  @@index([court_id], name: "court_id")
  @@index([date], name: "date")
}

model booking {
  id                      BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  court_id                BigInt              @db.UnsignedBigInt
  local_date              DateTime            @db.Date
  local_time              DateTime            @db.Time(0)
  timespan                Int                 @default(60) @db.UnsignedSmallInt
  local_start_datetime    DateTime            @db.DateTime(0)
  local_end_datetime      DateTime            @db.DateTime(0)
  currency_id             BigInt              @db.UnsignedBigInt
  amount                  Decimal             @db.Decimal(20, 2)
  downpayment             Decimal?            @db.Decimal(20, 2)
  amount_payed            Decimal             @default(0.00) @db.Decimal(20, 2)
  user_id                 BigInt?             @db.UnsignedBigInt
  customer_id             BigInt?             @db.UnsignedBigInt
  first_name              String?             @db.VarChar(64)
  last_name               String?             @db.VarChar(64)
  email                   String?             @db.VarChar(128)
  phone                   String?             @db.VarChar(32)
  comments                String?             @db.MediumText
  creation_datetime       DateTime            @db.DateTime(0)
  status                  booking_status      @default(BOOKED)
  eb_id                   BigInt?             @db.UnsignedBigInt
  waived                  booking_waived      @default(N)
  user_migration_datetime DateTime?           @db.DateTime(0)
  boleta                  String?             @db.VarChar(32)
  confirmed               booking_confirmed   @default(N)
  noshow                  booking_noshow      @default(N)
  recurrent_booking_id    BigInt?             @db.UnsignedBigInt
  booked_by               booking_booked_by   @default(club)
  hashid                  String?             @db.Char(32)
  nplayers                Int?                @db.UnsignedTinyInt
  user_coupons_id         BigInt?             @db.UnsignedBigInt
  booking_user_id         BigInt?             @db.UnsignedBigInt
  tournament              Int                 @default(0) @db.UnsignedTinyInt
  players_cap             Int?                @db.UnsignedSmallInt
  local_tl_datetime       DateTime?           @db.DateTime(0)
  appid                   String              @default("easycancha") @db.VarChar(32)
  appos                   booking_appos       @default(web)
  court                   court               @relation(fields: [court_id], references: [id])
  currency                currency            @relation(fields: [currency_id], references: [id])
  customer                customer?           @relation(fields: [customer_id], references: [id])
  user                    user?               @relation(fields: [user_id], references: [id])
  ancillary_booking       ancillary_booking[]
  booking_action          booking_action[]
  booking_players         booking_players[]

  @@index([booking_user_id], name: "booking_user_id")
  @@index([court_id], name: "court_id")
  @@index([currency_id], name: "currency_id")
  @@index([customer_id], name: "customer_id")
  @@index([eb_id], name: "eb_id")
  @@index([local_date], name: "local_date")
  @@index([local_end_datetime], name: "local_end_datetime")
  @@index([local_tl_datetime], name: "local_tl_datetime")
  @@index([hashid], name: "md5")
  @@index([status], name: "status")
  @@index([user_id], name: "user_id")
}

model booking_action {
  id         BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  admin_id   BigInt?                @db.UnsignedBigInt
  user_id    BigInt?                @db.UnsignedBigInt
  booking_id BigInt                 @db.UnsignedBigInt
  datetime   DateTime               @db.DateTime(0)
  action     booking_action_action?
  comment    String?                @db.VarChar(64)
  admin      admin?                 @relation(fields: [admin_id], references: [id])
  booking    booking                @relation(fields: [booking_id], references: [id])
  user       user?                  @relation(fields: [user_id], references: [id])

  @@index([admin_id], name: "admin_id")
  @@index([booking_id], name: "booking_id")
  @@index([user_id], name: "user_id")
}

model booking_players {
  id                      BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  booking_id              BigInt                    @db.UnsignedBigInt
  user_id                 BigInt?                   @db.UnsignedBigInt
  player_id               BigInt?                   @db.UnsignedBigInt
  status                  booking_players_status    @default(INVITED)
  local_invite_datetime   DateTime?                 @db.DateTime(0)
  local_action_datetime   DateTime?                 @db.DateTime(0)
  migration_datetime      DateTime?                 @db.DateTime(0)
  booking                 booking                   @relation(fields: [booking_id], references: [id])
  player                  player?                   @relation(fields: [player_id], references: [id])
  user                    user?                     @relation(fields: [user_id], references: [id])
  booking_players_actions booking_players_actions[]

  @@index([booking_id], name: "booking_id")
  @@index([player_id], name: "player_id")
  @@index([user_id], name: "user_id")
}

model booking_players_actions {
  id                 BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  booking_players_id BigInt                          @db.UnsignedBigInt
  admin_id           BigInt?                         @db.UnsignedBigInt
  user_id            BigInt?                         @db.UnsignedBigInt
  action             booking_players_actions_action?
  local_datetime     DateTime                        @db.DateTime(0)
  admin              admin?                          @relation(fields: [admin_id], references: [id])
  booking_players    booking_players                 @relation(fields: [booking_players_id], references: [id])
  user               user?                           @relation(fields: [user_id], references: [id])

  @@index([admin_id], name: "admin_id")
  @@index([booking_players_id], name: "booking_players_id")
  @@index([user_id], name: "user_id")
}

model booking_players_data_config {
  id          BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  club_id     BigInt                             @db.UnsignedBigInt
  sport_id    BigInt?                            @db.UnsignedBigInt
  name        String                             @db.VarChar(64)
  description String?                            @db.VarChar(256)
  type        booking_players_data_config_type?
  active      booking_players_data_config_active @default(Y)
}

model booking_players_data_int {
  booking_id                     BigInt @db.UnsignedBigInt
  booking_players_data_config_id BigInt @db.UnsignedBigInt
  value                          Int    @db.SmallInt

  @@id([booking_id, booking_players_data_config_id])
}

model booking_players_data_types {
  type  String @id @db.VarChar(16)
  table String @db.VarChar(64)
}

model booking_price {
  id         BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  booking_id BigInt  @db.UnsignedBigInt
  price_id   BigInt  @db.UnsignedBigInt
  timespan   Int     @db.UnsignedSmallInt
  pos        Int     @db.UnsignedSmallInt
  promo_code String? @db.VarChar(16)
  pfbc_id    BigInt? @db.UnsignedBigInt

  @@index([booking_id], name: "booking_id")
  @@index([price_id], name: "price_id")
}

model booking_survey {
  booking_id          BigInt   @id @db.UnsignedBigInt
  local_sent_datetime DateTime @db.DateTime(0)

  @@index([local_sent_datetime], name: "local_sent_datetime")
}

model bsale_club_fop_map {
  club_id         BigInt @db.UnsignedBigInt
  fop_id          BigInt @db.UnsignedBigInt
  payment_type_id BigInt @db.UnsignedBigInt
  club            club   @relation(fields: [club_id], references: [id])
  fop             fop    @relation(fields: [fop_id], references: [id])

  @@id([club_id, fop_id])
  @@index([fop_id], name: "fop_id")
}

model bsale_config {
  club_id  BigInt  @id @db.UnsignedBigInt
  token    String  @db.VarChar(64)
  sucursal BigInt? @db.UnsignedBigInt
  club     club    @relation(fields: [club_id], references: [id])
}

model caja18_cache {
  rut        String    @id @db.VarChar(32)
  date       DateTime  @db.DateTime(0)
  trabajador Int       @default(0) @db.UnsignedTinyInt
  pensionado Int       @default(0) @db.UnsignedTinyInt
  birthdate  DateTime? @db.Date
}

model cc_promo_bins {
  code String @db.VarChar(16)
  bin  String @db.Char(6)

  @@id([code, bin])
}

model cc_promo_config {
  id                      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                 BigInt    @db.UnsignedBigInt
  sport_id                BigInt    @db.UnsignedBigInt
  promo_code              String    @db.VarChar(16)
  local_from_booking_date DateTime  @db.Date
  local_to_booking_date   DateTime? @db.Date
  local_from_booked_date  DateTime  @db.Date
  local_to_booked_date    DateTime? @db.Date
  day_of_week             Int?      @db.UnsignedTinyInt
  discount                Int       @default(0) @db.UnsignedTinyInt
}

model club {
  id                                       BigInt                                    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                     String                                    @db.VarChar(128)
  timezone                                 String                                    @default("America/Santiago") @db.VarChar(64)
  currency_id                              BigInt                                    @db.UnsignedBigInt
  has_customer_codes                       club_has_customer_codes                   @default(N)
  website                                  String?                                   @db.VarChar(128)
  address                                  String?                                   @db.VarChar(128)
  locality                                 String?                                   @db.VarChar(128)
  region                                   String                                    @default("RM") @db.VarChar(64)
  zipcode                                  String                                    @default("0000000") @db.VarChar(32)
  country                                  String                                    @default("CL") @db.Char(2)
  phone                                    String?                                   @db.VarChar(32)
  active                                   club_active?                              @default(Y)
  rent_enabled                             club_rent_enabled                         @default(Y)
  activities_enabled                       club_activities_enabled                   @default(N)
  customer_enabled                         club_customer_enabled                     @default(N)
  app_enabled                              club_app_enabled                          @default(N)
  booking_email                            String?                                   @db.VarChar(128)
  diff_app_price                           club_diff_app_price                       @default(N)
  longitude                                Decimal?                                  @db.Decimal(18, 14)
  latitude                                 Decimal?                                  @db.Decimal(18, 14)
  image                                    String?                                   @db.VarChar(128)
  booking_email_data                       String?                                   @db.MediumText
  hide_normal_customer                     club_hide_normal_customer                 @default(N)
  working_hours                            String?                                   @db.MediumText
  court_info                               String?                                   @db.MediumText
  free_text                                String?                                   @db.MediumText
  rent_info                                String?                                   @db.MediumText
  ask_for_boleta                           club_ask_for_boleta                       @default(N)
  user_booking_email_data                  String?                                   @db.MediumText
  ask_for_confirmation                     club_ask_for_confirmation                 @default(N)
  ts_creation                              DateTime                                  @default(now()) @db.Timestamp(0)
  ask_for_noshow                           club_ask_for_noshow                       @default(N)
  ask_for_fop                              club_ask_for_fop                          @default(N)
  has_member_id                            club_has_member_id                        @default(N)
  notify_payment                           club_notify_payment                       @default(N)
  members_only_text                        String?                                   @db.VarChar(32)
  allow_browsing                           club_allow_browsing                       @default(N)
  request_member_document                  club_request_member_document              @default(N)
  member_document_text                     String?                                   @db.Text
  variable_increments                      club_variable_increments                  @default(N)
  invite_players_by_foid                   club_invite_players_by_foid               @default(N)
  parent_club_id                           BigInt?                                   @db.UnsignedBigInt
  language_code                            String                                    @default("es-CL") @db.Char(5)
  payment_periods                          Int?                                      @db.UnsignedTinyInt
  contract_signed                          club_contract_signed                      @default(N)
  debt_mode                                club_debt_mode                            @default(N)
  expire_admin_bookings                    club_expire_admin_bookings                @default(N)
  geo_city_id                              BigInt?                                   @db.UnsignedBigInt
  important_message                        String?                                   @db.VarChar(64)
  normal_customer_text                     String?                                   @db.VarChar(64)
  closed                                   club_closed                               @default(N)
  forbid_multiple_bookings_admin           club_forbid_multiple_bookings_admin       @default(N)
  max_bookings                             Int?                                      @db.UnsignedSmallInt
  max_bookings_per_day                     Int?                                      @db.UnsignedSmallInt
  coupon_name                              String                                    @default("invitación") @db.VarChar(32)
  coupons_name                             String                                    @default("invitaciones") @db.VarChar(32)
  coupon_gender                            club_coupon_gender                        @default(F)
  include_tyc                              club_include_tyc                          @default(N)
  custom_tyc                               String?                                   @db.VarChar(256)
  text_tyc                                 String?                                   @db.VarChar(256)
  hide_address                             club_hide_address                         @default(N)
  can_block_customers                      club_can_block_customers                  @default(Y)
  transactions_report_enabled              club_transactions_report_enabled          @default(N)
  activity                                 activity[]
  activity_fee_charge                      activity_fee_charge[]
  admin_payment_period                     admin_payment_period[]
  bsale_club_fop_map                       bsale_club_fop_map[]
  bsale_config                             bsale_config?
  club_activities_invoice_type_config      club_activities_invoice_type_config?
  club_admin                               club_admin[]
  club_admin_base_rules                    club_admin_base_rules[]
  club_admin_customer_code_allowed         club_admin_customer_code_allowed[]
  club_admin_sports_allowed                club_admin_sports_allowed[]
  club_ancillary                           club_ancillary[]
  club_coupon                              club_coupon[]
  club_customer_code                       club_customer_code[]
  club_custom_products_invoice_type_config club_custom_products_invoice_type_config?
  club_feature                             club_feature[]
  club_image                               club_image[]
  club_sport                               club_sport[]
  club_sport_alias                         club_sport_alias[]
  club_sport_hours                         club_sport_hours[]
  club_sport_invoice_type_config           club_sport_invoice_type_config[]
  club_sport_rent_config                   club_sport_rent_config[]
  club_user                                club_user[]
  club_user_address                        club_user_address[]
  club_user_family                         club_user_family[]
  club_user_relationship                   club_user_relationship[]
  court                                    court[]
  custom_product                           custom_product[]
  data_config_club_bucket                  data_config_club_bucket?
  date_range                               date_range[]
  day_block                                day_block[]
  day_hours                                day_hours[]
  day_schedule                             day_schedule[]
  dte_config                               dte_config?
  ebrain_config                            ebrain_config?
  enrollment                               enrollment[]
  fop_app_config                           fop_app_config[]
  holiday_hours                            holiday_hours[]
  holiday_schedule                         holiday_schedule[]
  magnus_caja_club_admin                   magnus_caja_club_admin[]
  magnus_caja_online                       magnus_caja_online[]
  magnus_club_fop_map                      magnus_club_fop_map[]
  magnus_club_sport_config                 magnus_club_sport_config[]
  magnus_config                            magnus_config?
  magnus_custom_product_config             magnus_custom_product_config?
  magnus_golf_green_fee_config             magnus_golf_green_fee_config?
  price                                    price[]
  schedule                                 schedule[]
  uniform_request                          uniform_request[]
  uniform_request_oc                       uniform_request_oc[]
  user                                     user[]
  user_club_customer_code                  user_club_customer_code[]
  user_data_bool                           user_data_bool[]
  user_data_options                        user_data_options[]
  user_data_text                           user_data_text[]
  user_data_textarea                       user_data_textarea[]
  user_merges                              user_merges[]
  user_type                                user_type[]
  vessi_config                             vessi_config?
  webpay_config                            webpay_config?
  webpay_oneclick_config                   webpay_oneclick_config?

  @@index([active], name: "active")
  @@index([country], name: "country")
}

model club_activities_invoice_type_config {
  club_id         BigInt       @id @db.UnsignedBigInt
  invoice_type_id BigInt       @db.UnsignedBigInt
  club            club         @relation(fields: [club_id], references: [id])
  invoice_type    invoice_type @relation(fields: [invoice_type_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model club_admin {
  club_id            BigInt                        @db.UnsignedBigInt
  admin_id           BigInt                        @db.UnsignedBigInt
  role               club_admin_role               @default(worker)
  active             club_admin_active             @default(Y)
  rent_enabled       club_admin_rent_enabled       @default(Y)
  activities_enabled club_admin_activities_enabled @default(Y)
  admin              admin                         @relation(fields: [admin_id], references: [id])
  club               club                          @relation(fields: [club_id], references: [id])

  @@id([club_id, admin_id, role])
  @@index([admin_id], name: "admin_id")
}

model club_admin_base_rules {
  club_id  BigInt @db.UnsignedBigInt
  admin_id BigInt @db.UnsignedBigInt
  menu     String @db.VarChar(64)
  feature  String @db.VarChar(64)
  admin    admin  @relation(fields: [admin_id], references: [id])
  club     club   @relation(fields: [club_id], references: [id])

  @@id([club_id, admin_id, menu, feature])
  @@index([admin_id], name: "admin_id")
}

model club_admin_customer_code_allowed {
  club_id          BigInt @db.UnsignedBigInt
  admin_id         BigInt @db.UnsignedBigInt
  customer_code_id BigInt @db.UnsignedBigInt
  admin            admin  @relation(fields: [admin_id], references: [id])
  club             club   @relation(fields: [club_id], references: [id])

  @@id([club_id, admin_id, customer_code_id])
  @@index([admin_id], name: "admin_id")
}

model club_admin_sports_allowed {
  club_id  BigInt @db.UnsignedBigInt
  admin_id BigInt @db.UnsignedBigInt
  sport_id BigInt @db.UnsignedBigInt
  admin    admin  @relation(fields: [admin_id], references: [id])
  club     club   @relation(fields: [club_id], references: [id])
  sport    sport  @relation(fields: [sport_id], references: [id])

  @@id([club_id, admin_id, sport_id])
  @@index([admin_id], name: "admin_id")
  @@index([sport_id], name: "sport_id")
}

model club_ancillary {
  id                                 BigInt                              @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                            BigInt                              @db.UnsignedBigInt
  ancillary_id                       BigInt                              @db.UnsignedBigInt
  sport_id                           BigInt?                             @db.UnsignedBigInt
  detail                             String?                             @db.VarChar(32)
  timebound                          club_ancillary_timebound            @default(N)
  amount                             Decimal?                            @db.Decimal(20, 2)
  active                             club_ancillary_active               @default(N)
  max_items                          Int                                 @default(99) @db.UnsignedSmallInt
  online_payment                     club_ancillary_online_payment       @default(N)
  club                               club                                @relation(fields: [club_id], references: [id])
  ancillary_booking                  ancillary_booking[]
  club_ancillary_invoice_type_config club_ancillary_invoice_type_config?
  magnus_club_ancillary_config       magnus_club_ancillary_config?

  @@index([ancillary_id], name: "ancillary_id")
  @@index([club_id], name: "club_id")
  @@index([sport_id], name: "sport_id")
}

model club_ancillary_invoice_type_config {
  club_ancillary_id BigInt         @id @db.UnsignedBigInt
  invoice_type_id   BigInt         @db.UnsignedBigInt
  club_ancillary    club_ancillary @relation(fields: [club_ancillary_id], references: [id])
  invoice_type      invoice_type   @relation(fields: [invoice_type_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model club_coupon {
  id                        BigInt                              @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                   BigInt                              @db.UnsignedBigInt
  name                      String                              @db.VarChar(64)
  limit_period_unit         club_coupon_limit_period_unit?
  limit_period_amount       Int?                                @db.UnsignedSmallInt
  limit_period_month_day    String?                             @db.VarChar(5)
  beneficiary_max_period    club_coupon_beneficiary_max_period?
  beneficiary_max_instances Int?                                @db.SmallInt
  active                    club_coupon_active                  @default(N)
  deleted                   club_coupon_deleted                 @default(N)
  allow_family_usage        club_coupon_allow_family_usage      @default(N)
  club                      club                                @relation(fields: [club_id], references: [id])
  user_coupons              user_coupons[]

  @@index([club_id], name: "club_id")
}

model club_customer_code {
  id                                   BigInt                                @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                              BigInt                                @db.UnsignedBigInt
  code                                 String                                @db.VarChar(64)
  description                          String                                @db.MediumText
  active                               club_customer_code_active             @default(Y)
  sort                                 Int                                   @default(1) @db.TinyInt
  tl_code                              String?                               @db.Char(2)
  color_code                           String?                               @db.Char(7)
  club                                 club                                  @relation(fields: [club_id], references: [id])
  activity_price                       activity_price[]
  custom_product                       custom_product[]
  fedegolf_customer_code_exception     fedegolf_customer_code_exception?
  max_bookings_customer_code_exception max_bookings_customer_code_exception?
  price                                price[]
  user_club_customer_code              user_club_customer_code[]

  @@unique([club_id, code], name: "club_id")
}

model club_customer_code_booking_limits {
  club_id          BigInt                                    @db.UnsignedBigInt
  customer_code_id BigInt                                    @db.UnsignedBigInt
  period           club_customer_code_booking_limits_period?
  instances        Int?                                      @db.SmallInt

  @@id([club_id, customer_code_id])
}

model club_custom_products_invoice_type_config {
  club_id         BigInt       @id @db.UnsignedBigInt
  invoice_type_id BigInt       @db.UnsignedBigInt
  club            club         @relation(fields: [club_id], references: [id])
  invoice_type    invoice_type @relation(fields: [invoice_type_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model club_feature {
  club_id    BigInt  @db.UnsignedBigInt
  feature_id BigInt  @db.UnsignedBigInt
  club       club    @relation(fields: [club_id], references: [id])
  feature    feature @relation(fields: [feature_id], references: [id])

  @@id([club_id, feature_id])
  @@index([feature_id], name: "feature_id")
}

model club_image {
  id      BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  club_id BigInt @db.UnsignedBigInt
  image   String @db.VarChar(128)
  club    club   @relation(fields: [club_id], references: [id])

  @@index([club_id], name: "club_id")
}

model club_invoice {
  id                   BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  parent_club_id       BigInt                         @db.UnsignedBigInt
  club_id              BigInt                         @db.UnsignedBigInt
  yearmonth            String                         @db.Char(7)
  amount               Decimal                        @db.Decimal(20, 2)
  currency_id          BigInt                         @db.UnsignedBigInt
  parent_club_payed    club_invoice_parent_club_payed @default(N)
  parent_club_comments String?                        @db.Text
  club_payed           club_invoice_club_payed        @default(N)
  club_comments        String?                        @db.Text
  xlsx                 Bytes?
}

model club_invoice_adjustments {
  id             BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  parent_club_id BigInt  @db.UnsignedBigInt
  club_id        BigInt  @db.UnsignedBigInt
  yearmonth      String  @db.Char(7)
  amount         Decimal @db.Decimal(20, 2)
  currency_id    BigInt  @db.UnsignedBigInt
  description    String  @db.VarChar(128)
}

model club_invoice_config {
  parent_club_id BigInt   @db.UnsignedBigInt
  club_id        BigInt   @db.UnsignedBigInt
  start_date     DateTime @default(dbgenerated("2019-05-01")) @db.Date

  @@id([parent_club_id, club_id])
}

model club_invoice_data {
  club_id         BigInt  @id @db.UnsignedBigInt
  nombre_director String? @db.VarChar(128)
  email           String? @db.VarChar(128)
  telefono        String? @db.VarChar(32)
  rut             String? @db.VarChar(10)
  razon_social    String? @db.VarChar(100)
}

model club_sport {
  club_id     BigInt                 @db.UnsignedBigInt
  sport_id    BigInt                 @db.UnsignedBigInt
  app_enabled club_sport_app_enabled @default(Y)
  sort        Int                    @default(1) @db.UnsignedTinyInt
  club        club                   @relation(fields: [club_id], references: [id])
  sport       sport                  @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id])
  @@index([sport_id], name: "sport_id")
}

model club_sport_alias {
  club_id                                      BigInt @db.UnsignedBigInt
  sport_id                                     BigInt @db.UnsignedBigInt
  alias_sport_id                               BigInt @db.UnsignedBigInt
  sport_club_sport_alias_alias_sport_idTosport sport  @relation("club_sport_alias_alias_sport_idTosport", fields: [alias_sport_id], references: [id])
  club                                         club   @relation(fields: [club_id], references: [id])
  sport_club_sport_alias_sport_idTosport       sport  @relation("club_sport_alias_sport_idTosport", fields: [sport_id], references: [id])

  @@id([club_id, sport_id, alias_sport_id])
  @@index([alias_sport_id], name: "alias_sport_id")
  @@index([sport_id], name: "sport_id")
}

model club_sport_hours {
  club_id          BigInt   @db.UnsignedBigInt
  sport_id         BigInt   @db.UnsignedBigInt
  court_id         BigInt   @db.UnsignedBigInt
  date_range_id    BigInt   @db.UnsignedBigInt
  local_start_time DateTime @db.Time(0)
  local_end_time   DateTime @db.Time(0)
  day_of_week      Int      @db.UnsignedTinyInt
  club             club     @relation(fields: [club_id], references: [id])
  court            court    @relation(fields: [court_id], references: [id])
  sport            sport    @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id, court_id, date_range_id, day_of_week])
  @@index([court_id], name: "club_sport_hours_ibfk_3")
  @@index([sport_id], name: "sport_id")
}

model club_sport_invoice_type_config {
  club_id         BigInt       @db.UnsignedBigInt
  sport_id        BigInt       @db.UnsignedBigInt
  invoice_type_id BigInt       @db.UnsignedBigInt
  club            club         @relation(fields: [club_id], references: [id])
  invoice_type    invoice_type @relation(fields: [invoice_type_id], references: [id])
  sport           sport        @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id])
  @@index([invoice_type_id], name: "invoice_type_id")
  @@index([sport_id], name: "sport_invoice_type_config_ibfk_2")
}

model club_sport_rent_config {
  club_id                             BigInt                                                  @db.UnsignedBigInt
  sport_id                            BigInt                                                  @db.UnsignedBigInt
  min_timespan                        Int                                                     @db.UnsignedSmallInt
  max_timespan                        Int                                                     @db.UnsignedSmallInt
  increments                          Int                                                     @db.UnsignedSmallInt
  tl_hours                            Int?                                                    @db.SmallInt
  allow_booking_on_hold               club_sport_rent_config_allow_booking_on_hold            @default(N)
  allow_downpayment                   club_sport_rent_config_allow_downpayment                @default(N)
  allow_instant_payment               club_sport_rent_config_allow_instant_payment            @default(Y)
  allow_changes_before                club_sport_rent_config_allow_changes_before             @default(Y)
  hours_allowed_before                Int                                                     @default(6) @db.SmallInt
  expire_free_bookings_min_players    club_sport_rent_config_expire_free_bookings_min_players @default(N)
  min_players                         Int?                                                    @db.UnsignedSmallInt
  show_week_schedule                  club_sport_rent_config_show_week_schedule               @default(N)
  show_repeat_booking                 club_sport_rent_config_show_repeat_booking              @default(N)
  mark_noshow_for_void                club_sport_rent_config_mark_noshow_for_void             @default(N)
  noshow_minutes                      Int?                                                    @db.UnsignedSmallInt
  price_modifies_ap_days              club_sport_rent_config_price_modifies_ap_days           @default(N)
  gender_pricing                      club_sport_rent_config_gender_pricing                   @default(N)
  booking_user_pricing                club_sport_rent_config_booking_user_pricing             @default(N)
  coupon_pricing                      club_sport_rent_config_coupon_pricing                   @default(N)
  age_pricing                         club_sport_rent_config_age_pricing                      @default(N)
  offer_book_for_others               club_sport_rent_config_offer_book_for_others            @default(NO)
  price_modifies_min_max_timespan     club_sport_rent_config_price_modifies_min_max_timespan  @default(N)
  expire_admin_bookings               club_sport_rent_config_expire_admin_bookings            @default(N)
  msg_need_min_invites                Int                                                     @default(0) @db.UnsignedSmallInt
  min_ap_unit                         club_sport_rent_config_min_ap_unit                      @default(DAY)
  min_ap_value                        Int                                                     @default(0) @db.SmallInt
  max_ap_unit                         club_sport_rent_config_max_ap_unit                      @default(DAY)
  max_ap_value                        Int                                                     @default(7) @db.SmallInt
  force_customer_code                 club_sport_rent_config_force_customer_code              @default(Y)
  expire_after_x_minutes              Int?                                                    @db.MediumInt
  min_ap_compare_unit                 club_sport_rent_config_min_ap_compare_unit              @default(DAY)
  max_ap_compare_unit                 club_sport_rent_config_max_ap_compare_unit              @default(DAY)
  price_modifies_capacity             club_sport_rent_config_price_modifies_capacity          @default(N)
  multiple_bookings_tl_minutes        Int?                                                    @db.SmallInt
  allow_void_booking_minutes_before   Int                                                     @default(0) @db.SmallInt
  allow_change_booking_minutes_before Int                                                     @default(0) @db.SmallInt
  max_bookings                        Int?                                                    @db.UnsignedSmallInt
  max_bookings_per_day                Int?                                                    @db.UnsignedSmallInt
  hide_end_time                       club_sport_rent_config_hide_end_time                    @default(N)
  force_logged_invites                club_sport_rent_config_force_logged_invites             @default(N)
  simple_search                       club_sport_rent_config_simple_search                    @default(N)
  offer_schedule                      club_sport_rent_config_offer_schedule                   @default(N)
  club                                club                                                    @relation(fields: [club_id], references: [id])
  sport                               sport                                                   @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id])
  @@index([sport_id], name: "sport_id")
}

model club_user {
  club_id                 BigInt            @db.UnsignedBigInt
  user_id                 BigInt            @db.UnsignedBigInt
  local_creation_datetime DateTime?         @db.DateTime(0)
  blocked                 club_user_blocked @default(N)
  member_id               String?           @db.VarChar(32)
  comments                String?           @db.MediumText
  club                    club              @relation(fields: [club_id], references: [id])
  user                    user              @relation(fields: [user_id], references: [id])

  @@id([club_id, user_id])
  @@index([user_id], name: "user_id")
}

model club_user_address {
  club_id          BigInt  @db.UnsignedBigInt
  user_id          BigInt  @db.UnsignedBigInt
  geo_country_code String? @db.Char(2)
  geo_state_id     BigInt? @db.UnsignedBigInt
  geo_city_id      BigInt? @db.UnsignedBigInt
  address          String? @db.VarChar(128)
  address2         String? @db.VarChar(128)
  club             club    @relation(fields: [club_id], references: [id])
  user             user    @relation(fields: [user_id], references: [id])

  @@id([club_id, user_id])
  @@index([user_id], name: "user_id")
}

model club_user_data_config {
  user_type_id        BigInt                          @db.UnsignedBigInt
  user_data_config_id BigInt                          @db.UnsignedBigInt
  mandatory           club_user_data_config_mandatory @default(N)
  active              club_user_data_config_active    @default(Y)
  sort                Int                             @default(1) @db.TinyInt
  primary             club_user_data_config_primary   @default(N)
  user_data_config    user_data_config                @relation(fields: [user_data_config_id], references: [id])
  user_type           user_type                       @relation(fields: [user_type_id], references: [id])

  @@id([user_type_id, user_data_config_id])
  @@index([user_data_config_id], name: "user_data_config_id")
  @@index([user_type_id], name: "user_type_id")
}

model club_user_family {
  club_id                                  BigInt                 @db.UnsignedBigInt
  main_user_id                             BigInt                 @db.UnsignedBigInt
  user_id                                  BigInt                 @db.UnsignedBigInt
  user_relationship_type_id                BigInt                 @default(4) @db.UnsignedBigInt
  club                                     club                   @relation(fields: [club_id], references: [id])
  user_club_user_family_main_user_idTouser user                   @relation("club_user_family_main_user_idTouser", fields: [main_user_id], references: [id])
  user_club_user_family_user_idTouser      user                   @relation("club_user_family_user_idTouser", fields: [user_id], references: [id])
  user_relationship_type                   user_relationship_type @relation(fields: [user_relationship_type_id], references: [id])

  @@id([club_id, main_user_id, user_id])
  @@index([main_user_id], name: "main_user_id")
  @@index([user_id], name: "user_id")
  @@index([user_relationship_type_id], name: "user_relationship_type_id")
}

model club_user_member_document {
  id               BigInt                              @id @default(autoincrement()) @db.UnsignedBigInt
  club_id          BigInt                              @db.UnsignedBigInt
  user_id          BigInt                              @db.UnsignedBigInt
  local_datetime   DateTime                            @db.DateTime(0)
  processed        club_user_member_document_processed @default(N)
  document         Bytes                               @db.MediumBlob
  content_type     String                              @db.VarChar(64)
  hashid           String                              @db.Char(32)
  rejected         club_user_member_document_rejected  @default(N)
  rejection_reason String?                             @db.MediumText

  @@index([club_id], name: "club_id")
  @@index([hashid], name: "hashid")
  @@index([user_id], name: "user_id")
}

model club_user_relationship {
  club_id                                      BigInt    @db.UnsignedBigInt
  user_type_id                                 BigInt    @db.UnsignedBigInt
  user_id_is                                   BigInt    @db.UnsignedBigInt
  user_id_of                                   BigInt    @db.UnsignedBigInt
  urtid                                        BigInt?   @db.UnsignedBigInt
  club                                         club      @relation(fields: [club_id], references: [id])
  user_club_user_relationship_user_id_isTouser user      @relation("club_user_relationship_user_id_isTouser", fields: [user_id_is], references: [id])
  user_club_user_relationship_user_id_ofTouser user      @relation("club_user_relationship_user_id_ofTouser", fields: [user_id_of], references: [id])
  user_type                                    user_type @relation(fields: [user_type_id], references: [id])

  @@id([club_id, user_type_id, user_id_is, user_id_of])
  @@index([user_type_id], name: "club_user_relationship_ibfk_2")
  @@index([user_id_is], name: "user_id_is")
  @@index([user_id_of], name: "user_id_of")
}

model convenio {
  id                  BigInt                      @id @default(autoincrement()) @db.UnsignedBigInt
  club_id             BigInt                      @db.UnsignedBigInt
  sport_id            BigInt?                     @db.UnsignedBigInt
  name                String                      @db.VarChar(64)
  limit_period_unit   convenio_limit_period_unit?
  limit_period_amount Int?                        @db.UnsignedSmallInt
  active              convenio_active             @default(Y)
  deleted             convenio_deleted            @default(N)
  customer_code_id    BigInt?                     @db.UnsignedBigInt
}

model convenio_usage {
  product_id             BigInt @db.UnsignedBigInt
  product_transaction_id BigInt @db.UnsignedBigInt
  convenio_id            BigInt @db.UnsignedBigInt

  @@id([product_id, product_transaction_id, convenio_id])
}

model countries {
  code String @id @db.Char(2)
  name String @db.VarChar(64)
}

model country_config {
  iso_code                  String                @id @db.Char(2)
  default_language_iso_code String                @db.Char(5)
  name                      String                @default("") @db.VarChar(64)
  language_name             String                @default("") @db.VarChar(64)
  active                    country_config_active @default(Y)
  phone_code                String                @db.Char(4)
  match_sport_config        match_sport_config[]
  user                      user[]

  @@index([default_language_iso_code], name: "default_language_iso_code")
}

model country_fields_config {
  iso_code          String                          @db.Char(2)
  name              String                          @db.VarChar(32)
  visible           country_fields_config_visible   @default(Y)
  mandatory         country_fields_config_mandatory @default(Y)
  regexp_validation String?                         @db.VarChar(128)

  @@id([iso_code, name])
}

model court {
  id                                          BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                                     BigInt                    @db.UnsignedBigInt
  sport_id                                    BigInt                    @db.UnsignedBigInt
  number                                      Int                       @db.UnsignedSmallInt
  name                                        String?                   @db.VarChar(128)
  sort                                        Int                       @default(1) @db.TinyInt
  active                                      court_active              @default(N)
  channel                                     Int?                      @db.TinyInt
  extra_info                                  String?                   @db.VarChar(128)
  capacity_enabled                            court_capacity_enabled    @default(N)
  capacity                                    Int?                      @db.UnsignedSmallInt
  app_enabled                                 court_app_enabled         @default(Y)
  deleted                                     court_deleted             @default(N)
  ownership_enabled                           court_ownership_enabled   @default(N)
  notification_email                          String?                   @db.VarChar(128)
  min_capacity                                Int?                      @db.UnsignedSmallInt
  max_capacity_per_booking                    Int?                      @db.UnsignedSmallInt
  club                                        club                      @relation(fields: [club_id], references: [id])
  sport                                       sport                     @relation(fields: [sport_id], references: [id])
  block                                       block[]
  booking                                     booking[]
  club_sport_hours                            club_sport_hours[]
  court_activity                              court_activity[]
  court_date_range_config                     court_date_range_config[]
  day_hours                                   day_hours[]
  day_schedule                                day_schedule[]
  holiday_hours                               holiday_hours[]
  holiday_schedule                            holiday_schedule[]
  multi_court_courtTomulti_court_court_id     multi_court[]             @relation("courtTomulti_court_court_id")
  multi_court_courtTomulti_court_sub_court_id multi_court[]             @relation("courtTomulti_court_sub_court_id")
  schedule                                    schedule[]

  @@unique([club_id, sport_id, number], name: "club_sport_number")
  @@index([club_id], name: "club_id")
  @@index([club_id, sport_id], name: "club_id_2")
  @@index([sport_id], name: "sport_id")
}

model court_activity {
  court_id        BigInt   @db.UnsignedBigInt
  local_date_time DateTime @db.DateTime(0)
  court           court    @relation(fields: [court_id], references: [id])

  @@id([court_id, local_date_time])
}

model court_date_range_config {
  court_id  BigInt                         @db.UnsignedBigInt
  from_date DateTime                       @db.Date
  to_date   DateTime?                      @db.Date
  active    court_date_range_config_active @default(Y)
  court     court                          @relation(fields: [court_id], references: [id])

  @@id([court_id, from_date])
  @@unique([court_id, from_date, to_date], name: "court_id")
}

model credit_note {
  folio               BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  tipo                String                @db.Char(3)
  yearmonth           String                @db.Char(7)
  invoice_folio       BigInt                @db.UnsignedBigInt
  invoice_date        DateTime              @db.Date
  fecha_emision       DateTime              @db.Date
  fecha_vencimiento   DateTime              @db.Date
  entity_id           BigInt                @db.UnsignedBigInt
  monto_neto          Decimal?              @db.Decimal(20, 0)
  monto_excento       Decimal?              @db.Decimal(20, 0)
  tasa_iva            Decimal?              @db.Decimal(20, 0)
  monto_iva           Decimal?              @db.Decimal(20, 0)
  monto_total         Decimal?              @db.Decimal(20, 0)
  credit_note_product credit_note_product[]
}

model credit_note_product {
  id          BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  folio       BigInt      @db.UnsignedBigInt
  name        String      @db.VarChar(256)
  amount      Decimal     @db.Decimal(20, 2)
  credit_note credit_note @relation(fields: [folio], references: [folio])

  @@index([folio], name: "folio")
}

model cronjobs {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  server              String    @db.VarChar(64)
  name                String    @db.VarChar(64)
  utc_datetime_start  DateTime  @db.DateTime(0)
  utc_datetime_finish DateTime? @db.DateTime(0)
  status              Boolean?

  @@unique([name, utc_datetime_start], name: "name")
}

model cronjobs_lock {
  name                    String   @id @db.VarChar(64)
  running_server          String?  @db.VarChar(64)
  utc_last_datetime_start DateTime @db.DateTime(0)
}

model cruzados_cache {
  rut    String   @id @db.VarChar(32)
  date   DateTime @db.DateTime(0)
  estado Int      @default(0) @db.UnsignedTinyInt
}

model currency {
  id                                BigInt                              @id @default(autoincrement()) @db.UnsignedBigInt
  code                              String                              @unique @db.Char(3)
  name                              String                              @db.VarChar(128)
  symbol                            String                              @db.VarChar(16)
  decimal_places                    Int                                 @db.UnsignedTinyInt
  decimal_separator                 String                              @db.Char(1)
  group_separator                   String                              @db.Char(1)
  activity_booking                  activity_booking[]
  activity_booking_uniform          activity_booking_uniform[]
  activity_price_amount             activity_price_amount[]
  activity_price_fee                activity_price_fee[]
  activity_price_uniform_fee        activity_price_uniform_fee[]
  booking                           booking[]
  custom_product                    custom_product[]
  multiple_product                  multiple_product[]
  multiple_product_item             multiple_product_item[]
  multiple_product_item_base_amount multiple_product_item_base_amount[]
  uniform_request                   uniform_request[]
}

model currency_daily {
  id                BigInt    @id @default(autoincrement())
  currency_id       BigInt?
  date              DateTime? @db.Date
  conversion_factor Decimal?  @db.Decimal(20, 5)
  create_datetime   DateTime? @default(now()) @db.DateTime(0)
  base_currency_id  BigInt?
}

model customer {
  id                      BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                 BigInt           @db.UnsignedBigInt
  first_name              String           @db.VarChar(64)
  last_name               String           @db.VarChar(64)
  email                   String           @db.VarChar(128)
  phone                   String           @db.VarChar(32)
  local_creation_datetime DateTime?        @db.DateTime(0)
  migrated_user_id        BigInt?          @db.UnsignedBigInt
  foid_country            String?          @db.Char(2)
  foid_type               String?          @db.Char(2)
  foid_number             String?          @db.VarChar(32)
  blocked                 customer_blocked @default(N)
  member_id               String?          @db.VarChar(32)
  comments                String?          @db.Text
  booking                 booking[]

  @@unique([club_id, email], name: "club_id")
  @@unique([club_id, phone], name: "club_id_2")
  @@unique([club_id, foid_country, foid_type, foid_number], name: "foid")
  @@unique([club_id, member_id], name: "member_id")
}

model customer_code_discard_rules {
  id                         BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                    BigInt @db.UnsignedBigInt
  sport_id                   BigInt @db.UnsignedBigInt
  primary_customer_code_id   BigInt @db.UnsignedBigInt
  discarded_customer_code_id BigInt @db.UnsignedBigInt
  sort                       Int    @default(1) @db.UnsignedTinyInt
}

model customer_user_type {
  user_id      BigInt    @db.UnsignedBigInt
  user_type_id BigInt    @db.UnsignedBigInt
  user         user      @relation(fields: [user_id], references: [id])
  user_type    user_type @relation(fields: [user_type_id], references: [id])

  @@id([user_id, user_type_id])
  @@index([user_id], name: "user_id")
  @@index([user_type_id], name: "user_type_id")
}

model custom_product {
  id                      BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                 BigInt                @db.UnsignedBigInt
  name                    String                @db.VarChar(64)
  comments                String?               @db.MediumText
  user_id                 BigInt?               @db.UnsignedBigInt
  customer_code_id        BigInt?               @db.UnsignedBigInt
  amount                  Decimal               @db.Decimal(20, 2)
  currency_id             BigInt                @db.UnsignedBigInt
  amount_payed            Decimal               @db.Decimal(20, 2)
  status                  custom_product_status @default(BOOKED)
  boleta                  String?               @db.VarChar(32)
  local_creation_datetime DateTime              @db.DateTime(0)
  invoice_type_id         BigInt?               @db.UnsignedBigInt
  quantity                Int                   @default(1) @db.UnsignedSmallInt
  item_amount             Decimal               @db.Decimal(20, 2)
  club                    club                  @relation(fields: [club_id], references: [id])
  currency                currency              @relation(fields: [currency_id], references: [id])
  club_customer_code      club_customer_code?   @relation(fields: [customer_code_id], references: [id])
  user                    user?                 @relation(fields: [user_id], references: [id])

  @@index([club_id], name: "custom_product_club_id")
  @@index([currency_id], name: "custom_product_currency_id")
  @@index([customer_code_id], name: "custom_product_customer_code_id")
  @@index([user_id], name: "custom_product_user_id")
  @@index([name], name: "name")
}

model dahua_config {
  club_id BigInt @id @db.UnsignedBigInt
  port    String @db.Char(4)
}

model data_config {
  id                               BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  name                             String                             @db.VarChar(64)
  description                      String?                            @db.VarChar(256)
  type                             data_config_type                   @default(BOOL)
  allow_textarea                   data_config_allow_textarea         @default(N)
  data_options_config              data_options_config[]
  enrollment_data_config           enrollment_data_config[]
  enrollment_request_data_bool     enrollment_request_data_bool[]
  enrollment_request_data_file     enrollment_request_data_file[]
  enrollment_request_data_options  enrollment_request_data_options[]
  enrollment_request_data_text     enrollment_request_data_text[]
  enrollment_request_data_textarea enrollment_request_data_textarea[]
}

model data_config_club_bucket {
  club_id BigInt @id @db.UnsignedBigInt
  name    String @db.VarChar(256)
  club    club   @relation(fields: [club_id], references: [id])
}

model data_options_config {
  id             BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  data_config_id BigInt      @db.UnsignedBigInt
  value          String      @db.VarChar(64)
  data_config    data_config @relation(fields: [data_config_id], references: [id])

  @@index([data_config_id], name: "data_options_config_ibfk_1")
}

model date_range {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  club_id          BigInt             @db.UnsignedBigInt
  sport_id         BigInt             @db.UnsignedBigInt
  name             String?            @db.VarChar(64)
  from_date        DateTime           @db.Date
  to_date          DateTime?          @db.Date
  club             club               @relation(fields: [club_id], references: [id])
  sport            sport              @relation(fields: [sport_id], references: [id])
  holiday_hours    holiday_hours[]
  holiday_schedule holiday_schedule[]

  @@unique([club_id, sport_id, from_date, to_date], name: "r")
  @@index([club_id], name: "club_id")
  @@index([sport_id], name: "sport_id")
}

model day_block {
  id                      BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  description             String   @db.VarChar(256)
  club_id                 BigInt   @db.UnsignedBigInt
  sport_id                BigInt?  @db.UnsignedBigInt
  local_date              DateTime @db.Date
  local_start_time        DateTime @db.Time(0)
  local_end_time          DateTime @db.Time(0)
  courts                  String?  @db.VarChar(256)
  local_creation_datetime DateTime @db.DateTime(0)
  admin_id                BigInt   @db.UnsignedBigInt
  admin                   admin    @relation(fields: [admin_id], references: [id])
  club                    club     @relation(fields: [club_id], references: [id])

  @@index([admin_id], name: "admin_id")
  @@index([club_id], name: "club_id")
}

model day_hours {
  club_id          BigInt   @db.UnsignedBigInt
  sport_id         BigInt   @db.UnsignedBigInt
  court_id         BigInt   @db.UnsignedBigInt
  date             DateTime @db.Date
  local_start_time DateTime @db.Time(0)
  local_end_time   DateTime @db.Time(0)
  club             club     @relation(fields: [club_id], references: [id])
  court            court    @relation(fields: [court_id], references: [id])
  sport            sport    @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id, court_id, date])
  @@index([club_id], name: "club_id")
  @@index([court_id], name: "court_id")
  @@index([date], name: "date")
  @@index([sport_id], name: "sport_id")
}

model day_schedule {
  id               BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  club_id          BigInt   @db.UnsignedBigInt
  sport_id         BigInt   @db.UnsignedBigInt
  court_id         BigInt   @db.UnsignedBigInt
  date             DateTime @db.Date
  local_start_time DateTime @db.Time(0)
  local_end_time   DateTime @db.Time(0)
  price_id         BigInt?  @db.UnsignedBigInt
  customer_code_id BigInt?  @db.UnsignedBigInt
  description      String?  @db.VarChar(128)
  timespan         Int?     @db.UnsignedSmallInt
  sort             Int      @default(0) @db.UnsignedTinyInt
  club             club     @relation(fields: [club_id], references: [id])
  court            court    @relation(fields: [court_id], references: [id])
  price            price?   @relation(fields: [price_id], references: [id])
  sport            sport    @relation(fields: [sport_id], references: [id])

  @@index([club_id], name: "club_id")
  @@index([court_id], name: "court_id")
  @@index([customer_code_id], name: "customer_code_id")
  @@index([price_id], name: "price_id")
  @@index([sport_id], name: "sport_id")
}

model dte_config {
  club_id                 BigInt              @id @db.UnsignedBigInt
  provider                dte_config_provider @default(bsale)
  utc_start_datetime      DateTime            @db.DateTime(0)
  default_invoice_type_id BigInt              @default(2) @db.UnsignedBigInt
  club                    club                @relation(fields: [club_id], references: [id])
}

model ebrain_config {
  club_id   BigInt @id @db.UnsignedBigInt
  endpoint  String @db.VarChar(256)
  accesskey String @db.VarChar(64)
  secretkey String @db.VarChar(64)
  corpid    String @db.VarChar(10)
  club      club   @relation(fields: [club_id], references: [id])
}

model email_bounce {
  id    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email String   @db.VarChar(128)
  ts    DateTime @default(now()) @db.Timestamp(0)

  @@index([email], name: "email")
}

model email_complaint {
  id    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email String   @db.VarChar(128)
  ts    DateTime @default(now()) @db.Timestamp(0)

  @@index([email], name: "email")
}

model email_delivery {
  id    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email String   @db.VarChar(128)
  ts    DateTime @default(now()) @db.Timestamp(0)

  @@index([email], name: "email")
}

model email_unsubscribe {
  id       BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  email    String   @db.VarChar(128)
  ts       DateTime @default(now()) @db.Timestamp(0)
  campaign String?  @db.VarChar(128)

  @@index([email], name: "email")
}

model enrollment {
  id                     BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                BigInt                   @db.UnsignedBigInt
  name                   String                   @db.VarChar(256)
  description            String?                  @db.MediumText
  active                 enrollment_active        @default(N)
  sort                   Int                      @default(1) @db.TinyInt
  utc_creation_datetime  DateTime                 @db.DateTime(0)
  deleted                enrollment_deleted       @default(N)
  accept_tyc             enrollment_accept_tyc    @default(N)
  tyc_url                String?                  @db.VarChar(256)
  approval_text          String?                  @db.MediumText
  club                   club                     @relation(fields: [club_id], references: [id])
  enrollment_data_config enrollment_data_config[]
  enrollment_request     enrollment_request[]

  @@index([club_id], name: "club_id")
}

model enrollment_data_config {
  enrollment_id  BigInt                           @db.UnsignedBigInt
  data_config_id BigInt                           @db.UnsignedBigInt
  mandatory      enrollment_data_config_mandatory @default(Y)
  active         enrollment_data_config_active    @default(Y)
  sort           Int                              @default(1) @db.TinyInt
  deleted        enrollment_data_config_deleted   @default(N)
  example_file   String?                          @db.VarChar(256)
  data_config    data_config                      @relation(fields: [data_config_id], references: [id])
  enrollment     enrollment                       @relation(fields: [enrollment_id], references: [id])

  @@id([enrollment_id, data_config_id])
  @@index([data_config_id], name: "enrollment_data_config_ibfk_2")
}

model enrollment_request {
  id                               BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  enrollment_id                    BigInt                             @db.UnsignedBigInt
  user_id                          BigInt                             @db.UnsignedBigInt
  utc_creation_datetime            DateTime                           @db.DateTime(0)
  status                           enrollment_request_status          @default(CREATING)
  rejection_reason                 String?                            @db.MediumText
  deleted                          enrollment_request_deleted         @default(N)
  utc_processed_datetime           DateTime?                          @db.DateTime(0)
  enrollment                       enrollment                         @relation(fields: [enrollment_id], references: [id])
  enrollment_request_data_bool     enrollment_request_data_bool[]
  enrollment_request_data_file     enrollment_request_data_file[]
  enrollment_request_data_options  enrollment_request_data_options[]
  enrollment_request_data_text     enrollment_request_data_text[]
  enrollment_request_data_textarea enrollment_request_data_textarea[]

  @@index([enrollment_id], name: "enrollment_id")
}

model enrollment_request_data_bool {
  enrollment_request_id BigInt                             @db.UnsignedBigInt
  data_config_id        BigInt                             @db.UnsignedBigInt
  value                 enrollment_request_data_bool_value
  textarea              String?                            @db.MediumText
  data_config           data_config                        @relation(fields: [data_config_id], references: [id])
  enrollment_request    enrollment_request                 @relation(fields: [enrollment_request_id], references: [id])

  @@id([enrollment_request_id, data_config_id])
  @@index([data_config_id], name: "enrollment_request_data_bool_ibfk_3")
}

model enrollment_request_data_file {
  enrollment_request_id BigInt             @db.UnsignedBigInt
  data_config_id        BigInt             @db.UnsignedBigInt
  value                 String             @db.VarChar(256)
  textarea              String?            @db.MediumText
  data_config           data_config        @relation(fields: [data_config_id], references: [id])
  enrollment_request    enrollment_request @relation(fields: [enrollment_request_id], references: [id])

  @@id([enrollment_request_id, data_config_id])
  @@index([data_config_id], name: "enrollment_request_data_file_ibfk_2")
}

model enrollment_request_data_options {
  enrollment_request_id BigInt             @db.UnsignedBigInt
  data_config_id        BigInt             @db.UnsignedBigInt
  value                 BigInt             @db.UnsignedBigInt
  textarea              String?            @db.MediumText
  data_config           data_config        @relation(fields: [data_config_id], references: [id])
  enrollment_request    enrollment_request @relation(fields: [enrollment_request_id], references: [id])

  @@id([enrollment_request_id, data_config_id])
  @@index([data_config_id], name: "enrollment_request_data_options_ibfk_2")
}

model enrollment_request_data_text {
  enrollment_request_id BigInt             @db.UnsignedBigInt
  data_config_id        BigInt             @db.UnsignedBigInt
  value                 String             @db.VarChar(64)
  textarea              String?            @db.MediumText
  data_config           data_config        @relation(fields: [data_config_id], references: [id])
  enrollment_request    enrollment_request @relation(fields: [enrollment_request_id], references: [id])

  @@id([enrollment_request_id, data_config_id])
  @@index([data_config_id], name: "enrollment_request_data_text_ibfk_2")
}

model enrollment_request_data_textarea {
  enrollment_request_id BigInt             @db.UnsignedBigInt
  data_config_id        BigInt             @db.UnsignedBigInt
  value                 String             @db.MediumText
  textarea              String?            @db.MediumText
  data_config           data_config        @relation(fields: [data_config_id], references: [id])
  enrollment_request    enrollment_request @relation(fields: [enrollment_request_id], references: [id])

  @@id([enrollment_request_id, data_config_id])
  @@index([data_config_id], name: "enrollment_request_data_textarea_ibfk_2")
}

model expense {
  id               BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  club_id          BigInt          @db.UnsignedBigInt
  name             String          @db.VarChar(64)
  comments         String?         @db.MediumText
  currency_id      BigInt?         @db.UnsignedBigInt
  unit_price       Decimal?        @db.Decimal(20, 2)
  quantity         Int             @default(1)
  amount           Decimal?        @db.Decimal(20, 2)
  transaction_date DateTime        @db.Date
  deleted          expense_deleted @default(N)
}

model expire_user_token {
  user_id             BigInt   @id @db.UnsignedBigInt
  utc_expire_datetime DateTime @db.DateTime(0)
}

model expo_user_token {
  appid                 String                 @default("easycancha") @db.VarChar(32)
  token                 String                 @id @db.VarChar(255)
  user_id               BigInt?                @db.UnsignedBigInt
  active                expo_user_token_active @default(Y)
  last_utc_datetime_set DateTime?              @db.DateTime(0)
}

model feature {
  id           BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  name         String         @db.VarChar(64)
  image        String         @default("/images/features/bullet.png") @db.VarChar(128)
  club_feature club_feature[]
}

model fedegolfconfig {
  club_id BigInt  @id @db.UnsignedBigInt
  club    Int     @db.UnsignedSmallInt
  version Int     @default(2) @db.UnsignedTinyInt
  tknkey  String? @db.VarChar(32)
}

model fedegolf_config {
  court_id BigInt @id @db.UnsignedBigInt
}

model fedegolf_customer_code_exception {
  customer_code_id   BigInt             @id @db.UnsignedBigInt
  club_customer_code club_customer_code @relation(fields: [customer_code_id], references: [id])
}

model fedegolf_log {
  id                        BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  booking_id                BigInt              @db.UnsignedBigInt
  rut                       String?             @db.VarChar(10)
  club                      Int                 @db.UnsignedSmallInt
  campeonato                Int                 @db.UnsignedTinyInt
  utc_notification_datetime DateTime            @db.DateTime(0)
  status                    fedegolf_log_status @default(PENDING)
  boleta                    String?             @db.VarChar(32)
  indice                    String?             @db.VarChar(32)
  monto                     Decimal?            @db.Decimal(20, 2)
  utc_ok_datetime           DateTime?           @db.DateTime(0)
  utc_void_datetime         DateTime?           @db.DateTime(0)
  utc_service_call_datetime DateTime?           @db.DateTime(0)

  @@index([booking_id], name: "booking_id")
}

model firebase_token {
  fcm_token String  @id @db.VarChar(255)
  user_id   BigInt? @db.UnsignedBigInt
}

model foid_options {
  foid_country String               @db.Char(2)
  foid_type    String               @db.Char(2)
  name         String               @db.VarChar(32)
  default      foid_options_default @default(N)

  @@id([foid_country, foid_type])
}

model fop {
  id                  BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  code                String                @db.VarChar(32)
  name                String                @db.VarChar(64)
  fop_table           String?               @db.VarChar(64)
  bsale_club_fop_map  bsale_club_fop_map[]
  fop_app_config      fop_app_config[]
  magnus_club_fop_map magnus_club_fop_map[]
}

model fop_app_config {
  club_id BigInt                @db.UnsignedBigInt
  fop_id  BigInt                @db.UnsignedBigInt
  active  fop_app_config_active @default(Y)
  club    club                  @relation(fields: [club_id], references: [id])
  fop     fop                   @relation(fields: [fop_id], references: [id])

  @@id([club_id, fop_id])
  @@index([fop_id], name: "fop_id")
}

model fop_bank_transfer {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
  extra_info  String?  @db.VarChar(128)
}

model fop_cash {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
}

model fop_check {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
  extra_info  String?  @db.VarChar(128)
}

model fop_credit_card {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
  last4digits String?  @db.Char(4)
  auth_code   String?  @db.Char(6)
}

model fop_debit_card {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
  auth_code   String?  @db.Char(6)
}

model fop_discount {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
  extra_info  String?  @db.VarChar(128)
}

model fop_unknown {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  currency_id BigInt   @db.UnsignedBigInt
  amount      Decimal  @db.Decimal(20, 2)
  datetime    DateTime @db.DateTime(0)
}

model geo_city {
  id                            BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  geo_state_id                  BigInt                          @db.UnsignedBigInt
  name                          String                          @db.VarChar(128)
  timezone                      String?                         @db.VarChar(64)
  geo_state                     geo_state                       @relation(fields: [geo_state_id], references: [id])
  match_user_challenge          match_user_challenge[]
  user_match_sport_availability user_match_sport_availability[]

  @@index([geo_state_id], name: "geo_state_id")
}

model geo_country {
  code      String      @id @db.Char(2)
  name      String      @db.VarChar(64)
  geo_state geo_state[]
}

model geo_state {
  id               BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  geo_country_code String      @db.Char(2)
  name             String      @db.VarChar(128)
  short_name       String?     @db.VarChar(16)
  geo_country      geo_country @relation(fields: [geo_country_code], references: [code])
  geo_city         geo_city[]

  @@index([geo_country_code], name: "geo_country_code")
}

model golf_fee {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  price_id          BigInt   @db.UnsignedBigInt
  pfbc_id           BigInt?  @db.UnsignedBigInt
  fedegolf_amount   Decimal  @db.Decimal(20, 2)
  asociacion_amount Decimal? @db.Decimal(20, 2)
  price             price    @relation(fields: [price_id], references: [id])

  @@index([price_id], name: "price_id")
}

model holiday {
  id      BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  country String   @default("CL") @db.Char(2)
  date    DateTime @db.Date
  name    String   @db.VarChar(64)
}

model holiday_hours {
  club_id          BigInt     @db.UnsignedBigInt
  sport_id         BigInt     @db.UnsignedBigInt
  court_id         BigInt     @db.UnsignedBigInt
  date_range_id    BigInt     @db.UnsignedBigInt
  local_start_time DateTime   @db.Time(0)
  local_end_time   DateTime   @db.Time(0)
  club             club       @relation(fields: [club_id], references: [id])
  court            court      @relation(fields: [court_id], references: [id])
  date_range       date_range @relation(fields: [date_range_id], references: [id])
  sport            sport      @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id, court_id, date_range_id])
  @@index([club_id], name: "club_id")
  @@index([court_id], name: "court_id")
  @@index([date_range_id], name: "date_range_id")
  @@index([sport_id], name: "sport_id")
}

model holiday_schedule {
  id               BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  club_id          BigInt     @db.UnsignedBigInt
  sport_id         BigInt     @db.UnsignedBigInt
  court_id         BigInt     @db.UnsignedBigInt
  date_range_id    BigInt     @db.UnsignedBigInt
  local_start_time DateTime   @db.Time(0)
  local_end_time   DateTime   @db.Time(0)
  price_id         BigInt?    @db.UnsignedBigInt
  customer_code_id BigInt?    @db.UnsignedBigInt
  description      String?    @db.VarChar(128)
  timespan         Int?       @db.UnsignedSmallInt
  sort             Int        @default(0) @db.UnsignedTinyInt
  club             club       @relation(fields: [club_id], references: [id])
  court            court      @relation(fields: [court_id], references: [id])
  date_range       date_range @relation(fields: [date_range_id], references: [id])
  price            price?     @relation(fields: [price_id], references: [id])
  sport            sport      @relation(fields: [sport_id], references: [id])

  @@index([club_id], name: "club_id")
  @@index([court_id], name: "court_id")
  @@index([date_range_id], name: "date_range_id")
  @@index([price_id], name: "price_id")
  @@index([sport_id], name: "sport_id")
}

model invoice {
  folio             BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  tipo              String            @db.Char(3)
  yearmonth         String            @db.Char(7)
  fecha_emision     DateTime          @db.Date
  fecha_vencimiento DateTime          @db.Date
  entity_id         BigInt            @db.UnsignedBigInt
  monto_neto        Decimal?          @db.Decimal(20, 0)
  monto_excento     Decimal?          @db.Decimal(20, 0)
  tasa_iva          Decimal?          @db.Decimal(20, 0)
  monto_iva         Decimal?          @db.Decimal(20, 0)
  monto_total       Decimal?          @db.Decimal(20, 0)
  payed             invoice_payed     @default(N)
  comments          String?           @db.Text
  invoice_product   invoice_product[]
}

model invoice_product {
  id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  folio       BigInt  @db.UnsignedBigInt
  name        String  @db.VarChar(256)
  amount      Decimal @db.Decimal(20, 2)
  description String? @db.VarChar(256)
  invoice     invoice @relation(fields: [folio], references: [folio])

  @@index([folio], name: "folio")
}

model invoice_type {
  id                                             BigInt                                           @id @default(autoincrement()) @db.UnsignedBigInt
  country                                        String                                           @db.Char(2)
  code                                           String                                           @db.VarChar(32)
  name                                           String                                           @db.VarChar(64)
  activity_invoice_type_config                   activity_invoice_type_config[]
  activity_price_invoice_type_config             activity_price_invoice_type_config[]
  club_activities_invoice_type_config            club_activities_invoice_type_config[]
  club_ancillary_invoice_type_config             club_ancillary_invoice_type_config[]
  club_custom_products_invoice_type_config       club_custom_products_invoice_type_config[]
  club_sport_invoice_type_config                 club_sport_invoice_type_config[]
  magnus_venta                                   magnus_venta[]
  price_for_booking_customer_invoice_type_config price_for_booking_customer_invoice_type_config[]
  price_invoice_type_config                      price_invoice_type_config[]
  product_invoice                                product_invoice[]

  @@unique([country, code], name: "country")
}

model invoicing_data {
  id                           BigInt                                    @id @default(autoincrement()) @db.UnsignedBigInt
  alias                        String                                    @db.VarChar(64)
  rut                          String?                                   @db.VarChar(10)
  razon_social                 String?                                   @db.VarChar(100)
  giro                         String?                                   @db.VarChar(40)
  direccion                    String?                                   @db.VarChar(70)
  comuna                       String?                                   @db.VarChar(20)
  ciudad                       String?                                   @db.VarChar(20)
  email                        String?                                   @db.VarChar(256)
  club_ids                     String                                    @db.VarChar(64)
  invoicing_start_date         DateTime?                                 @db.Date
  invoicing_end_date           DateTime?                                 @db.Date
  invoicing_plan               invoicing_data_invoicing_plan             @default(APP_PAYED)
  invoicing_value              Decimal                                   @default(10.00) @db.Decimal(20, 2)
  invoicing_cap                Decimal?                                  @db.Decimal(20, 2)
  invoicing_min                Decimal?                                  @db.Decimal(20, 2)
  invoicing_plus_iva           invoicing_data_invoicing_plus_iva         @default(Y)
  invoicing_currency_id        BigInt                                    @default(2) @db.UnsignedBigInt
  generate_invoice             invoicing_data_generate_invoice           @default(Y)
  delta_days                   Int                                       @default(0) @db.TinyInt
  generate_report              invoicing_data_generate_report            @default(Y)
  glosa                        String?                                   @db.VarChar(256)
  contacto_receptor            String?                                   @db.VarChar(64)
  correo_receptor              String?                                   @db.VarChar(64)
  delta_due_days               Int                                       @default(0) @db.TinyInt
  days_before_notify_bill      Int?                                      @db.TinyInt
  same_day_uf                  invoicing_data_same_day_uf                @default(N)
  notification_bill_email      String?                                   @db.VarChar(256)
  glosa_replaces_nombre_item   invoicing_data_glosa_replaces_nombre_item @default(N)
  quotation_text               String?                                   @db.VarChar(256)
  invoicing_data_extra_product invoicing_data_extra_product[]
}

model invoicing_data_extra_product {
  id                BigInt                            @id @default(autoincrement()) @db.UnsignedBigInt
  invoicing_data_id BigInt                            @db.UnsignedBigInt
  name              String                            @db.VarChar(256)
  amount            Decimal                           @db.Decimal(20, 2)
  currency_id       BigInt                            @default(2) @db.UnsignedBigInt
  type              invoicing_data_extra_product_type @default(FIXED)
  priority          Int                               @default(1) @db.UnsignedTinyInt
  invoicing_data    invoicing_data                    @relation(fields: [invoicing_data_id], references: [id])

  @@index([invoicing_data_id], name: "invoicing_data_id")
}

model invoicing_data_references {
  id                BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  invoicing_data_id BigInt   @db.UnsignedBigInt
  tipo              String   @db.Char(3)
  folio             String   @db.VarChar(32)
  fecha             DateTime @db.Date
  codigo            String?  @db.Char(3)
  glosa             String?  @db.VarChar(64)
}

model invoicing_ranges {
  club_id       BigInt   @db.UnsignedBigInt
  from_bookings Int
  to_bookings   Int?
  value_uf      Decimal? @db.Decimal(20, 2)
  value_local   Decimal? @db.Decimal(20, 2)

  @@id([club_id, from_bookings])
}

model laaraucana_cache {
  rut        String   @id @db.VarChar(32)
  date       DateTime @db.DateTime(0)
  estado     Int      @default(0) @db.UnsignedTinyInt
  tipo       Int      @default(0) @db.UnsignedTinyInt
  trabajador Int      @default(0) @db.UnsignedTinyInt
  pensionado Int      @default(0) @db.UnsignedTinyInt
}

model laaraucana_service_token {
  date   DateTime @db.Date
  token  String   @db.VarChar(256)
  server String   @default("easycancha-1") @db.VarChar(64)

  @@id([date, server])
}

model language_config {
  code          String                 @id @db.Char(5)
  language_name String                 @db.VarChar(64)
  locale_name   String?                @db.VarChar(64)
  active        language_config_active @default(Y)
  user          user[]
}

model lead {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name        String   @db.VarChar(128)
  email       String   @db.VarChar(128)
  code        String   @db.VarChar(64)
  utcdatetime DateTime @db.DateTime(0)

  @@unique([email, code], name: "email")
}

model magnus_activity_config {
  activity_id     BigInt   @id @db.UnsignedBigInt
  codigo          String   @db.VarChar(16)
  unidad_contable String   @db.VarChar(16)
  departamento    String   @db.VarChar(16)
  activity        activity @relation(fields: [activity_id], references: [id])
}

model magnus_caja_club_admin {
  club_id          BigInt                        @db.UnsignedBigInt
  admin_id         BigInt                        @db.UnsignedBigInt
  caja             String                        @db.VarChar(4)
  utc_datetime     DateTime?                     @db.DateTime(0)
  estado           magnus_caja_club_admin_estado @default(REPORTED)
  day_change       Int                           @default(0) @db.UnsignedTinyInt
  dtes_issued      Int                           @default(0) @db.UnsignedTinyInt
  ventas_processed Int                           @default(0) @db.UnsignedTinyInt
  admin            admin                         @relation(fields: [admin_id], references: [id])
  club             club                          @relation(fields: [club_id], references: [id])

  @@id([club_id, admin_id])
  @@index([admin_id], name: "admin_id")
}

model magnus_caja_online {
  club_id      BigInt                    @db.UnsignedBigInt
  id           Int                       @db.UnsignedTinyInt
  caja         String                    @db.VarChar(4)
  utc_datetime DateTime?                 @db.DateTime(0)
  estado       magnus_caja_online_estado @default(OPEN)
  club         club                      @relation(fields: [club_id], references: [id])

  @@id([club_id, id])
  @@index([club_id], name: "club_id")
}

model magnus_club_ancillary_config {
  club_ancillary_id BigInt         @id @db.UnsignedBigInt
  codigo            String         @db.VarChar(16)
  unidad_contable   String         @db.VarChar(16)
  departamento      String         @db.VarChar(16)
  club_ancillary    club_ancillary @relation(fields: [club_ancillary_id], references: [id])
}

model magnus_club_fop_map {
  club_id        BigInt @db.UnsignedBigInt
  fop_id         BigInt @db.UnsignedBigInt
  cod_medio_pago String @db.VarChar(32)
  club           club   @relation(fields: [club_id], references: [id])
  fop            fop    @relation(fields: [fop_id], references: [id])

  @@id([club_id, fop_id])
  @@index([fop_id], name: "fop_id")
}

model magnus_club_sport_config {
  club_id         BigInt @db.UnsignedBigInt
  sport_id        BigInt @db.UnsignedBigInt
  codigo          String @db.VarChar(16)
  unidad_contable String @db.VarChar(16)
  departamento    String @db.VarChar(16)
  club            club   @relation(fields: [club_id], references: [id])
  sport           sport  @relation(fields: [sport_id], references: [id])

  @@id([club_id, sport_id])
  @@index([sport_id], name: "sport_id")
}

model magnus_config {
  club_id            BigInt   @id @db.UnsignedBigInt
  utc_start_datetime DateTime @db.DateTime(0)
  service_url        String   @db.VarChar(256)
  prod_service_db    String   @db.VarChar(256)
  test_service_db    String   @db.VarChar(256)
  club               club     @relation(fields: [club_id], references: [id])
}

model magnus_custom_product_config {
  club_id         BigInt @id @db.UnsignedBigInt
  codigo          String @db.VarChar(16)
  unidad_contable String @db.VarChar(16)
  departamento    String @db.VarChar(16)
  club            club   @relation(fields: [club_id], references: [id])
}

model magnus_golf_green_fee_config {
  club_id         BigInt @id @db.UnsignedBigInt
  codigo          String @db.VarChar(16)
  unidad_contable String @db.VarChar(16)
  departamento    String @db.VarChar(16)
  club            club   @relation(fields: [club_id], references: [id])
}

model magnus_price_config {
  price_id        BigInt @id @db.UnsignedBigInt
  codigo          String @db.VarChar(16)
  unidad_contable String @db.VarChar(16)
  departamento    String @db.VarChar(16)
  price           price  @relation(fields: [price_id], references: [id])
}

model magnus_price_for_booking_customer_config {
  pfbc_id                    BigInt                     @id @db.UnsignedBigInt
  codigo                     String                     @db.VarChar(16)
  unidad_contable            String                     @db.VarChar(16)
  departamento               String                     @db.VarChar(16)
  price_for_booking_customer price_for_booking_customer @relation(fields: [pfbc_id], references: [id])
}

model magnus_venta {
  product_id             BigInt       @db.UnsignedBigInt
  product_transaction_id BigInt       @db.UnsignedBigInt
  invoice_type_id        BigInt       @db.UnsignedBigInt
  utc_datetime           DateTime     @db.DateTime(0)
  caja                   String       @db.VarChar(4)
  result                 Int          @default(1) @db.UnsignedTinyInt
  sent                   Int          @default(0) @db.UnsignedTinyInt
  customer_enrolled      Int          @default(1) @db.UnsignedTinyInt
  invoice_type           invoice_type @relation(fields: [invoice_type_id], references: [id])

  @@id([product_id, product_transaction_id, invoice_type_id])
  @@index([invoice_type_id], name: "invoice_type_id")
}

model mandatory_user_type_relationship {
  user_type_id                                                                 BigInt    @db.UnsignedBigInt
  mandatory_user_type_id                                                       BigInt    @db.UnsignedBigInt
  user_type_mandatory_user_type_relationship_mandatory_user_type_idTouser_type user_type @relation("mandatory_user_type_relationship_mandatory_user_type_idTouser_type", fields: [mandatory_user_type_id], references: [id])
  user_type_mandatory_user_type_relationship_user_type_idTouser_type           user_type @relation("mandatory_user_type_relationship_user_type_idTouser_type", fields: [user_type_id], references: [id])

  @@id([user_type_id, mandatory_user_type_id])
  @@index([mandatory_user_type_id], name: "mandatory_user_type_id")
}

model match_sport_availability_options {
  sport_id           BigInt    @db.UnsignedBigInt
  day_of_week        Int       @db.UnsignedTinyInt
  min_time           DateTime  @db.Time(0)
  max_time           DateTime  @db.Time(0)
  default_start_time DateTime? @db.Time(0)
  default_end_time   DateTime? @db.Time(0)
  sport              sport     @relation(fields: [sport_id], references: [id])

  @@id([sport_id, day_of_week])
}

model match_sport_config {
  sport_id         BigInt                    @db.UnsignedBigInt
  country_iso_code String                    @db.Char(2)
  active           match_sport_config_active @default(N)
  country_config   country_config            @relation(fields: [country_iso_code], references: [iso_code])
  sport            sport                     @relation(fields: [sport_id], references: [id])

  @@id([sport_id, country_iso_code])
  @@index([country_iso_code], name: "country_iso_code")
}

model match_sport_field {
  id                           BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  sport_id                     BigInt                         @db.UnsignedBigInt
  name                         String                         @db.VarChar(64)
  text                         String?                        @db.VarChar(128)
  type                         match_sport_field_type         @default(single)
  display                      match_sport_field_display      @default(option)
  icon                         String?                        @db.VarChar(256)
  sort                         Int                            @default(1) @db.UnsignedTinyInt
  sport                        sport                          @relation(fields: [sport_id], references: [id])
  match_sport_field_option     match_sport_field_option[]
  match_sport_special_field    match_sport_special_field[]
  user_match_sport_fields_data user_match_sport_fields_data[]

  @@index([sport_id], name: "sport_id")
}

model match_sport_field_option {
  id                           BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  match_sport_field_id         BigInt                         @db.UnsignedBigInt
  name                         String                         @db.VarChar(64)
  description                  String?                        @db.Text
  sort                         Int                            @default(1) @db.UnsignedTinyInt
  default                      Int                            @default(0) @db.UnsignedTinyInt
  match_sport_field            match_sport_field              @relation(fields: [match_sport_field_id], references: [id])
  user_match_sport_fields_data user_match_sport_fields_data[]

  @@index([match_sport_field_id], name: "match_sport_field_id")
}

model match_sport_ranking {
  sport_id         BigInt                       @db.UnsignedBigInt
  country_iso_code String                       @default("CL") @db.Char(2)
  pos              BigInt                       @db.UnsignedBigInt
  user_id          BigInt                       @db.UnsignedBigInt
  mp               BigInt                       @default(0) @db.UnsignedBigInt
  mw               BigInt                       @default(0) @db.UnsignedBigInt
  ml               BigInt                       @default(0) @db.UnsignedBigInt
  pts              BigInt                       @default(0) @db.UnsignedBigInt
  special          match_sport_ranking_special?

  @@id([sport_id, pos, user_id])
}

model match_sport_special_field {
  name                 String            @db.VarChar(64)
  match_sport_field_id BigInt            @db.UnsignedBigInt
  match_sport_field    match_sport_field @relation(fields: [match_sport_field_id], references: [id])

  @@id([name, match_sport_field_id])
  @@index([match_sport_field_id], name: "match_sport_field_id")
}

model match_user_challenge {
  id                                            BigInt                                    @id @default(autoincrement()) @db.UnsignedBigInt
  sport_id                                      BigInt                                    @db.UnsignedBigInt
  main_user_id                                  BigInt                                    @db.UnsignedBigInt
  other_user_id                                 BigInt                                    @db.UnsignedBigInt
  geo_city_id                                   BigInt                                    @db.UnsignedBigInt
  day_of_week                                   Int                                       @db.UnsignedTinyInt
  date                                          DateTime                                  @db.Date
  start_time                                    DateTime                                  @db.Time(0)
  end_time                                      DateTime                                  @db.Time(0)
  utc_creation_datetime                         DateTime                                  @db.DateTime(0)
  status                                        match_user_challenge_status               @default(CHALLENGED)
  nogo_reason                                   String?                                   @db.Text
  main_user_dismissed                           match_user_challenge_main_user_dismissed  @default(N)
  other_user_dismissed                          match_user_challenge_other_user_dismissed @default(N)
  geo_city                                      geo_city                                  @relation(fields: [geo_city_id], references: [id])
  user_match_user_challenge_main_user_idTouser  user                                      @relation("match_user_challenge_main_user_idTouser", fields: [main_user_id], references: [id])
  user_match_user_challenge_other_user_idTouser user                                      @relation("match_user_challenge_other_user_idTouser", fields: [other_user_id], references: [id])
  sport                                         sport                                     @relation(fields: [sport_id], references: [id])
  match_user_challenge_action                   match_user_challenge_action[]
  match_user_challenge_rating                   match_user_challenge_rating[]
  match_user_challenge_user_hash                match_user_challenge_user_hash[]
  user_match_chat_msg                           user_match_chat_msg[]

  @@index([geo_city_id], name: "geo_city_id")
  @@index([main_user_id], name: "main_user_id")
  @@index([other_user_id], name: "other_user_id")
  @@index([sport_id], name: "sport_id")
}

model match_user_challenge_action {
  id                      BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  match_user_challenge_id BigInt                             @db.UnsignedBigInt
  user_id                 BigInt?                            @db.UnsignedBigInt
  action                  match_user_challenge_action_action @default(CHALLENGED)
  utc_datetime            DateTime?                          @db.DateTime(0)
  match_user_challenge    match_user_challenge               @relation(fields: [match_user_challenge_id], references: [id])

  @@index([match_user_challenge_id], name: "match_user_challenge_id")
}

model match_user_challenge_notification {
  id                      BigInt                                   @id @default(autoincrement()) @db.UnsignedBigInt
  match_user_challenge_id BigInt                                   @db.UnsignedBigInt
  user_id                 BigInt                                   @db.UnsignedBigInt
  medium                  match_user_challenge_notification_medium
  type                    match_user_challenge_notification_type?
  utc_datetime            DateTime                                 @db.DateTime(0)

  @@index([match_user_challenge_id], name: "match_user_challenge_id")
  @@index([medium], name: "medium")
  @@index([type], name: "type")
}

model match_user_challenge_rating {
  match_user_challenge_id                               BigInt                                        @db.UnsignedBigInt
  rating_user_id                                        BigInt                                        @db.UnsignedBigInt
  rated_user_id                                         BigInt                                        @db.UnsignedBigInt
  played                                                match_user_challenge_rating_played            @default(N)
  would_play_again                                      match_user_challenge_rating_would_play_again?
  did_someone_win                                       match_user_challenge_rating_did_someone_win?
  winner_user_id                                        BigInt?                                       @db.UnsignedBigInt
  personal_rating                                       Int?                                          @db.UnsignedTinyInt
  not_played_comment                                    String?                                       @db.Text
  utc_datetime                                          DateTime                                      @db.DateTime(0)
  match_user_challenge                                  match_user_challenge                          @relation(fields: [match_user_challenge_id], references: [id])
  user_match_user_challenge_rating_rated_user_idTouser  user                                          @relation("match_user_challenge_rating_rated_user_idTouser", fields: [rated_user_id], references: [id])
  user_match_user_challenge_rating_rating_user_idTouser user                                          @relation("match_user_challenge_rating_rating_user_idTouser", fields: [rating_user_id], references: [id])

  @@id([match_user_challenge_id, rating_user_id, rated_user_id])
  @@index([rated_user_id], name: "rated_user_id")
  @@index([rating_user_id], name: "rating_user_id")
}

model match_user_challenge_user_hash {
  match_user_challenge_id BigInt               @db.UnsignedBigInt
  user_id                 BigInt               @db.UnsignedBigInt
  hash                    String               @db.Char(32)
  match_user_challenge    match_user_challenge @relation(fields: [match_user_challenge_id], references: [id])
  user                    user                 @relation(fields: [user_id], references: [id])

  @@id([match_user_challenge_id, user_id])
  @@index([hash], name: "hash")
  @@index([user_id], name: "user_id")
}

model match_user_sport_base_sort {
  sport_id         BigInt @db.UnsignedBigInt
  country_iso_code String @default("CL") @db.Char(2)
  user_id          BigInt @db.UnsignedBigInt
  sortindex        BigInt

  @@id([sport_id, user_id])
}

model max_bookings_customer_code_exception {
  customer_code_id   BigInt             @id @db.UnsignedBigInt
  club_customer_code club_customer_code @relation(fields: [customer_code_id], references: [id])
}

model multiple_product {
  id                                BigInt                              @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                           BigInt                              @db.UnsignedBigInt
  amount                            Decimal                             @db.Decimal(20, 2)
  currency_id                       BigInt                              @db.UnsignedBigInt
  amount_payed                      Decimal                             @db.Decimal(20, 2)
  status                            multiple_product_status             @default(BOOKED)
  creation_datetime                 DateTime                            @db.DateTime(0)
  currency                          currency                            @relation(fields: [currency_id], references: [id])
  user                              user                                @relation(fields: [user_id], references: [id])
  multiple_product_item             multiple_product_item[]
  multiple_product_item_base_amount multiple_product_item_base_amount[]

  @@index([currency_id], name: "currency_id")
  @@index([user_id], name: "user_id")
}

model multiple_product_item {
  multiple_product_id    BigInt           @db.UnsignedBigInt
  product_id             BigInt           @db.UnsignedBigInt
  product_transaction_id BigInt           @db.UnsignedBigInt
  currency_id            BigInt           @db.UnsignedBigInt
  amount                 Decimal          @db.Decimal(20, 2)
  currency               currency         @relation(fields: [currency_id], references: [id])
  multiple_product       multiple_product @relation(fields: [multiple_product_id], references: [id])

  @@id([multiple_product_id, product_id, product_transaction_id])
  @@index([currency_id], name: "currency_id")
  @@index([product_id], name: "product_id")
  @@index([product_transaction_id], name: "product_transaction_id")
}

model multiple_product_item_base_amount {
  multiple_product_id    BigInt           @db.UnsignedBigInt
  product_id             BigInt           @db.UnsignedBigInt
  product_transaction_id BigInt           @db.UnsignedBigInt
  currency_id            BigInt           @db.UnsignedBigInt
  amount                 Decimal          @db.Decimal(20, 2)
  currency               currency         @relation(fields: [currency_id], references: [id])
  multiple_product       multiple_product @relation(fields: [multiple_product_id], references: [id])

  @@id([multiple_product_id, product_id, product_transaction_id])
  @@index([currency_id], name: "currency_id")
}

model multi_court {
  court_id                              BigInt @db.UnsignedBigInt
  sub_court_id                          BigInt @db.UnsignedBigInt
  court_courtTomulti_court_court_id     court  @relation("courtTomulti_court_court_id", fields: [court_id], references: [id])
  court_courtTomulti_court_sub_court_id court  @relation("courtTomulti_court_sub_court_id", fields: [sub_court_id], references: [id])

  @@id([court_id, sub_court_id])
  @@index([sub_court_id], name: "sub_court_id")
}

model parameter {
  name  String  @id @db.VarChar(64)
  value String? @db.VarChar(54)
}

model payment {
  product_id                 BigInt          @db.UnsignedBigInt
  product_transaction_id     BigInt          @db.UnsignedBigInt
  fop_id                     BigInt          @db.UnsignedBigInt
  fop_transaction_id         BigInt          @db.UnsignedBigInt
  currency_id                BigInt          @db.UnsignedBigInt
  amount                     Decimal         @db.Decimal(20, 2)
  local_transaction_datetime DateTime?       @db.DateTime(0)
  status                     payment_status  @default(APPROVED)
  deleted                    payment_deleted @default(N)
  utc_creation_datetime      DateTime?       @db.DateTime(0)
  utc_transaction_datetime   DateTime?       @db.DateTime(0)
  user_id                    BigInt?         @db.UnsignedBigInt
  admin_id                   BigInt?         @db.UnsignedBigInt

  @@id([product_id, product_transaction_id, fop_id, fop_transaction_id])
  @@index([fop_id], name: "fop_id")
  @@index([fop_transaction_id], name: "fop_transaction_id")
  @@index([product_id], name: "product_id")
  @@index([product_transaction_id], name: "product_transaction_id")
  @@index([utc_transaction_datetime], name: "utc_transaction_datetime")
}

model player {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  email           String?           @unique @db.VarChar(128)
  first_name      String?           @db.VarChar(64)
  last_name       String?           @db.VarChar(64)
  foid_country    String?           @db.Char(2)
  foid_type       String?           @db.Char(2)
  foid_number     String?           @db.VarChar(32)
  booking_players booking_players[]
}

model price {
  id                        BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                   BigInt                     @db.UnsignedBigInt
  sport_id                  BigInt                     @db.UnsignedBigInt
  name                      String                     @db.VarChar(64)
  timespan                  Int                        @db.UnsignedSmallInt
  currency_id               BigInt                     @db.UnsignedBigInt
  amount                    Decimal                    @db.Decimal(20, 4)
  app_amount                Decimal?                   @db.Decimal(20, 4)
  downpayment               Decimal?                   @db.Decimal(20, 4)
  customer_code_id          BigInt?                    @db.UnsignedBigInt
  active                    price_active               @default(Y)
  amount_m                  Decimal?                   @db.Decimal(20, 4)
  amount_f                  Decimal?                   @db.Decimal(20, 4)
  app_amount_m              Decimal?                   @db.Decimal(20, 2)
  app_amount_f              Decimal?                   @db.Decimal(20, 2)
  base_fee                  Decimal?                   @db.Decimal(20, 4)
  deleted                   price_deleted              @default(N)
  display_name              String?                    @db.VarChar(64)
  min_timespan              Int?                       @db.UnsignedSmallInt
  max_timespan              Int?                       @db.UnsignedSmallInt
  min_ap_unit               price_min_ap_unit          @default(DAY)
  min_ap_value              Int?                       @db.SmallInt
  max_ap_unit               price_max_ap_unit          @default(DAY)
  max_ap_value              Int?                       @db.SmallInt
  forbid_user_changes       price_forbid_user_changes  @default(N)
  min_ap_compare_unit       price_min_ap_compare_unit  @default(DAY)
  max_ap_compare_unit       price_max_ap_compare_unit  @default(DAY)
  capacity                  Int?                       @db.UnsignedSmallInt
  min_capacity              Int?                       @db.UnsignedSmallInt
  tournament                price_tournament           @default(N)
  app_enabled               price_app_enabled          @default(Y)
  max_capacity_per_booking  Int?                       @db.UnsignedSmallInt
  ownership_enabled         price_ownership_enabled    @default(DEFAULT)
  club                      club                       @relation(fields: [club_id], references: [id])
  club_customer_code        club_customer_code?        @relation(fields: [customer_code_id], references: [id])
  sport                     sport                      @relation(fields: [sport_id], references: [id])
  ancillary_price           ancillary_price[]
  day_schedule              day_schedule[]
  golf_fee                  golf_fee[]
  holiday_schedule          holiday_schedule[]
  magnus_price_config       magnus_price_config?
  price_invoice_type_config price_invoice_type_config?
  schedule                  schedule[]

  @@index([club_id], name: "club_id")
  @@index([customer_code_id], name: "customer_code_id")
  @@index([sport_id], name: "sport_id")
}

model price_for_booking_customer {
  id                                             BigInt                                          @id @default(autoincrement()) @db.UnsignedBigInt
  price_id                                       BigInt                                          @db.UnsignedBigInt
  club_coupon_id                                 BigInt?                                         @db.UnsignedBigInt
  customer_code_id                               BigInt?                                         @db.UnsignedBigInt
  min_age                                        Int?                                            @db.UnsignedTinyInt
  max_age                                        Int?                                            @db.UnsignedTinyInt
  amount                                         Decimal?                                        @db.Decimal(20, 4)
  amount_m                                       Decimal?                                        @db.Decimal(20, 4)
  amount_f                                       Decimal?                                        @db.Decimal(20, 4)
  app_amount                                     Decimal?                                        @db.Decimal(20, 4)
  app_amount_m                                   Decimal?                                        @db.Decimal(20, 4)
  app_amount_f                                   Decimal?                                        @db.Decimal(20, 4)
  base_fee                                       Decimal?                                        @db.Decimal(20, 4)
  max_daily_usage                                Int?                                            @db.UnsignedTinyInt
  only_book_for_others                           price_for_booking_customer_only_book_for_others @default(N)
  priority                                       Int                                             @default(1) @db.SmallInt
  active                                         price_for_booking_customer_active               @default(Y)
  deleted                                        price_for_booking_customer_deleted              @default(N)
  discard_for_booking_customer_code_id           BigInt?                                         @db.UnsignedBigInt
  app_enabled                                    price_for_booking_customer_app_enabled          @default(Y)
  magnus_price_for_booking_customer_config       magnus_price_for_booking_customer_config?
  price_for_booking_customer_invoice_type_config price_for_booking_customer_invoice_type_config?

  @@index([price_id], name: "price_id")
}

model price_for_booking_customer_invoice_type_config {
  price_for_booking_customer_id BigInt                     @id @db.UnsignedBigInt
  invoice_type_id               BigInt                     @db.UnsignedBigInt
  invoice_type                  invoice_type               @relation(fields: [invoice_type_id], references: [id])
  price_for_booking_customer    price_for_booking_customer @relation(fields: [price_for_booking_customer_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model price_invoice_type_config {
  price_id        BigInt       @id @db.UnsignedBigInt
  invoice_type_id BigInt       @db.UnsignedBigInt
  invoice_type    invoice_type @relation(fields: [invoice_type_id], references: [id])
  price           price        @relation(fields: [price_id], references: [id])

  @@index([invoice_type_id], name: "invoice_type_id")
}

model product {
  id         BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name       String  @db.VarChar(64)
  table_name String? @db.VarChar(64)
}

model product_invoice {
  product_id             BigInt                   @db.UnsignedBigInt
  product_transaction_id BigInt                   @db.UnsignedBigInt
  provider               product_invoice_provider @default(bsale)
  provider_id            BigInt?                  @db.UnsignedBigInt
  invoice_type_id        BigInt                   @db.UnsignedBigInt
  value                  BigInt                   @db.UnsignedBigInt
  url                    String?                  @db.Text
  issue_utc_datetime     DateTime                 @db.DateTime(0)
  amount                 Decimal                  @default(0.00) @db.Decimal(20, 2)
  invoice_type           invoice_type             @relation(fields: [invoice_type_id], references: [id])

  @@id([product_id, product_transaction_id, invoice_type_id])
  @@index([invoice_type_id], name: "invoice_type_id")
}

model quotation {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  sport_id            BigInt    @db.UnsignedBigInt
  club_id             BigInt?   @db.UnsignedBigInt
  local_date          DateTime  @db.Date
  local_time          DateTime? @db.Time(0)
  timespan            Int?      @db.UnsignedSmallInt
  user_id             BigInt?   @db.UnsignedBigInt
  local_timestamp     DateTime  @db.DateTime(0)
  results             Int?      @db.UnsignedInt
  alternative_results Int?      @db.UnsignedInt
  response_time       Int?      @db.UnsignedInt
}

model quotation_id {
  id                    BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  utc_creation_datetime DateTime @db.DateTime(0)
}

model recurrent_block {
  id                      BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  description             String                  @db.VarChar(256)
  club_id                 BigInt                  @db.UnsignedBigInt
  sport_id                BigInt                  @db.UnsignedBigInt
  start_date              DateTime                @db.Date
  end_date                DateTime                @db.Date
  start_time              DateTime                @db.Time(0)
  end_time                DateTime                @db.Time(0)
  days                    String                  @db.VarChar(16)
  courts                  String                  @db.VarChar(256)
  customer_codes          String                  @db.VarChar(128)
  local_creation_datetime DateTime                @db.DateTime(0)
  admin_id                BigInt                  @db.UnsignedBigInt
  deleted                 recurrent_block_deleted @default(N)
  utc_deleted_datetime    DateTime?               @db.DateTime(0)
}

model recurrent_booking {
  id                      BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                 BigInt   @db.UnsignedBigInt
  sport_id                BigInt   @db.UnsignedBigInt
  start_date              DateTime @db.Date
  end_date                DateTime @db.Date
  start_time              DateTime @db.Time(0)
  timespan                Int      @db.UnsignedSmallInt
  user_id                 BigInt?  @db.UnsignedBigInt
  customer_id             BigInt?  @db.UnsignedBigInt
  customer_code_id        BigInt?  @db.UnsignedBigInt
  days                    String   @db.VarChar(16)
  courts                  String   @db.VarChar(64)
  local_creation_datetime DateTime @db.DateTime(0)
}

model requested_clubs {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name         String  @db.VarChar(128)
  contact_name String? @db.VarChar(128)
  email        String? @db.VarChar(128)
  phone        String? @db.VarChar(32)
  user_id      BigInt? @db.UnsignedBigInt
}

model schedule {
  id               BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  club_id          BigInt   @db.UnsignedBigInt
  sport_id         BigInt   @db.UnsignedBigInt
  court_id         BigInt   @db.UnsignedBigInt
  date_range_id    BigInt   @db.UnsignedBigInt
  local_start_time DateTime @db.Time(0)
  local_end_time   DateTime @db.Time(0)
  day_of_week      Int      @db.UnsignedTinyInt
  price_id         BigInt?  @db.UnsignedBigInt
  customer_code_id BigInt?  @db.UnsignedBigInt
  description      String?  @db.VarChar(128)
  timespan         Int?     @db.UnsignedSmallInt
  sort             Int      @default(0) @db.UnsignedTinyInt
  club             club     @relation(fields: [club_id], references: [id])
  court            court    @relation(fields: [court_id], references: [id])
  price            price?   @relation(fields: [price_id], references: [id])
  sport            sport    @relation(fields: [sport_id], references: [id])

  @@index([club_id], name: "club_id")
  @@index([court_id], name: "court_id")
  @@index([customer_code_id], name: "customer_code_id")
  @@index([date_range_id], name: "date_range_id")
  @@index([day_of_week], name: "day_of_week")
  @@index([price_id], name: "price_id")
  @@index([sport_id], name: "sport_id")
}

model service_credentials {
  id          BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  name        String @db.VarChar(128)
  club_id     BigInt @db.UnsignedBigInt
  user        String @db.VarChar(64)
  salted_hash String @db.MediumText
}

model shorturl {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  url               String    @db.VarChar(1024)
  creation_datetime DateTime? @db.Timestamp(0)

  @@index([url], name: "url")
}

model sport {
  id                                                      BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  name                                                    String                             @unique @db.VarChar(64)
  increments                                              Int                                @default(60) @db.UnsignedSmallInt
  category_id                                             BigInt                             @db.UnsignedBigInt
  image                                                   String                             @default("/images/sports/generic.png") @db.VarChar(128)
  main                                                    sport_main                         @default(Y)
  field_name                                              String                             @default("Cancha") @db.VarChar(64)
  simple_search                                           sport_simple_search                @default(N)
  default_players_cap                                     Int?                               @db.UnsignedSmallInt
  invite_players                                          sport_invite_players               @default(Y)
  field_name_gender                                       sport_field_name_gender            @default(F)
  player_name                                             String                             @default("guest") @db.VarChar(32)
  players_name                                            String                             @default("guests") @db.VarChar(32)
  player_gender                                           sport_player_gender                @default(M)
  sport_category                                          sport_category                     @relation(fields: [category_id], references: [id])
  club_admin_sports_allowed                               club_admin_sports_allowed[]
  club_sport                                              club_sport[]
  club_sport_alias_club_sport_alias_alias_sport_idTosport club_sport_alias[]                 @relation("club_sport_alias_alias_sport_idTosport")
  club_sport_alias_club_sport_alias_sport_idTosport       club_sport_alias[]                 @relation("club_sport_alias_sport_idTosport")
  club_sport_hours                                        club_sport_hours[]
  club_sport_invoice_type_config                          club_sport_invoice_type_config[]
  club_sport_rent_config                                  club_sport_rent_config[]
  court                                                   court[]
  date_range                                              date_range[]
  day_hours                                               day_hours[]
  day_schedule                                            day_schedule[]
  holiday_hours                                           holiday_hours[]
  holiday_schedule                                        holiday_schedule[]
  magnus_club_sport_config                                magnus_club_sport_config[]
  match_sport_availability_options                        match_sport_availability_options[]
  match_sport_config                                      match_sport_config[]
  match_sport_field                                       match_sport_field[]
  match_user_challenge                                    match_user_challenge[]
  price                                                   price[]
  schedule                                                schedule[]
  user_match_sport                                        user_match_sport[]
  user_match_sport_availability                           user_match_sport_availability[]
  user_match_sport_fields_data                            user_match_sport_fields_data[]

  @@index([category_id], name: "category_id")
}

model sport_category {
  id    BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  name  String  @db.VarChar(64)
  sport sport[]
}

model square {
  id                       BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  idempotency_key          String?                @db.VarChar(36)
  product_id               BigInt                 @db.UnsignedBigInt
  product_transaction_id   BigInt                 @db.UnsignedBigInt
  currency_id              BigInt                 @db.UnsignedBigInt
  amount                   Decimal?               @db.Decimal(20, 2)
  payment_status           square_payment_status?
  utc_creation_datetime    DateTime?              @db.DateTime(0)
  utc_transaction_datetime DateTime?              @db.DateTime(0)
  checkout_id              String?                @db.VarChar(128)
  checkout_page_url        String?                @db.VarChar(256)
  club_id                  BigInt                 @db.UnsignedBigInt
  location_id              String?                @db.VarChar(64)
  order_id                 String?                @db.VarChar(64)
  card_brand               String?                @db.VarChar(16)
  last4digits              String?                @db.VarChar(4)
  payment_id               String?                @db.VarChar(64)
  order_state              square_order_state?
  refund_id                String?                @db.VarChar(64)
  utc_refund_datetime      DateTime?              @db.DateTime(0)
  refund_status            square_refund_status?
}

model square_config {
  club_id                          BigInt    @id @db.UnsignedBigInt
  encrypted_authorization_code     String?   @db.VarChar(256)
  encrypted_access_token           String?   @db.VarChar(256)
  encrypted_refresh_token          String?   @db.VarChar(256)
  merchant_id                      String?   @db.VarChar(64)
  utc_access_token_expiration_date DateTime? @db.DateTime(0)
  location_id                      String?   @db.VarChar(64)
  location_name                    String?   @db.VarChar(256)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model tempuser {
  user_id BigInt @db.UnsignedBigInt

  @@ignore
}

model uniform_request {
  id                   BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  oc                   BigInt                   @db.UnsignedBigInt
  club_id              BigInt                   @db.UnsignedBigInt
  local_date           DateTime                 @db.Date
  utc_created_datetime DateTime                 @db.DateTime(0)
  total_items          Int                      @default(0) @db.UnsignedSmallInt
  total_amount         Decimal                  @db.Decimal(20, 2)
  currency_id          BigInt                   @db.UnsignedBigInt
  delivery             uniform_request_delivery @default(Y)
  address              String?                  @db.VarChar(128)
  city                 String?                  @db.VarChar(64)
  club                 club                     @relation(fields: [club_id], references: [id])
  currency             currency                 @relation(fields: [currency_id], references: [id])

  @@index([club_id], name: "club_id")
  @@index([currency_id], name: "currency_id")
}

model uniform_request_oc {
  club_id BigInt @db.UnsignedBigInt
  year    Int    @db.UnsignedSmallInt
  oc      BigInt @db.UnsignedBigInt
  club    club   @relation(fields: [club_id], references: [id])

  @@id([club_id, year, oc])
}

model user {
  id                                                                           BigInt                           @id @default(autoincrement()) @db.UnsignedBigInt
  email                                                                        String?                          @db.VarChar(128)
  first_name                                                                   String                           @db.VarChar(64)
  last_name                                                                    String                           @db.VarChar(64)
  phone                                                                        String?                          @db.VarChar(32)
  salted_hash                                                                  String?                          @db.MediumText
  facebook_token                                                               String?                          @db.MediumText
  facebook_user_id                                                             BigInt?                          @unique @db.UnsignedBigInt
  gender                                                                       user_gender?
  birth_date                                                                   DateTime?                        @db.Date
  email_confirmed                                                              user_email_confirmed             @default(N)
  active                                                                       user_active                      @default(Y)
  password_reset_datetime                                                      DateTime?                        @db.DateTime(0)
  local_creation_datetime                                                      DateTime?                        @db.DateTime(0)
  web_enrolled_datetime                                                        DateTime?                        @db.DateTime(0)
  preferred_club_id                                                            BigInt?                          @db.UnsignedBigInt
  foid_country                                                                 String?                          @db.Char(2)
  foid_type                                                                    String?                          @db.Char(2)
  foid_number                                                                  String?                          @db.VarChar(32)
  user_merged                                                                  BigInt?                          @db.UnsignedBigInt
  country_iso_code                                                             String                           @default("CL") @db.Char(2)
  language_code                                                                String                           @default("es-CL") @db.Char(5)
  terms_accepted                                                               user_terms_accepted              @default(N)
  terms_accepted_utc_datetime                                                  DateTime?                        @db.DateTime(0)
  appid                                                                        String                           @default("easycancha") @db.VarChar(32)
  appos                                                                        user_appos                       @default(web)
  review_metadata                                                              Json?
  review_status                                                                Boolean                          @default(false)
  review_metadata_                                                             Json?
  review_status_                                                               Boolean                          @default(false)
  country_config                                                               country_config                   @relation(fields: [country_iso_code], references: [iso_code])
  language_config                                                              language_config                  @relation(fields: [language_code], references: [code])
  club                                                                         club?                            @relation(fields: [preferred_club_id], references: [id])
  activity_booking                                                             activity_booking[]
  activity_booking_action                                                      activity_booking_action[]
  activity_fee_charge                                                          activity_fee_charge[]
  activity_teacher                                                             activity_teacher[]
  booking                                                                      booking[]
  booking_action                                                               booking_action[]
  booking_players                                                              booking_players[]
  booking_players_actions                                                      booking_players_actions[]
  club_user                                                                    club_user[]
  club_user_address                                                            club_user_address[]
  club_user_family_club_user_family_main_user_idTouser                         club_user_family[]               @relation("club_user_family_main_user_idTouser")
  club_user_family_club_user_family_user_idTouser                              club_user_family[]               @relation("club_user_family_user_idTouser")
  club_user_relationship_club_user_relationship_user_id_isTouser               club_user_relationship[]         @relation("club_user_relationship_user_id_isTouser")
  club_user_relationship_club_user_relationship_user_id_ofTouser               club_user_relationship[]         @relation("club_user_relationship_user_id_ofTouser")
  customer_user_type                                                           customer_user_type[]
  custom_product                                                               custom_product[]
  match_user_challenge_match_user_challenge_main_user_idTouser                 match_user_challenge[]           @relation("match_user_challenge_main_user_idTouser")
  match_user_challenge_match_user_challenge_other_user_idTouser                match_user_challenge[]           @relation("match_user_challenge_other_user_idTouser")
  match_user_challenge_rating_match_user_challenge_rating_rated_user_idTouser  match_user_challenge_rating[]    @relation("match_user_challenge_rating_rated_user_idTouser")
  match_user_challenge_rating_match_user_challenge_rating_rating_user_idTouser match_user_challenge_rating[]    @relation("match_user_challenge_rating_rating_user_idTouser")
  match_user_challenge_user_hash                                               match_user_challenge_user_hash[]
  multiple_product                                                             multiple_product[]
  user_club_customer_code                                                      user_club_customer_code[]
  user_coupons                                                                 user_coupons[]
  user_data_bool                                                               user_data_bool[]
  user_data_options                                                            user_data_options[]
  user_data_text                                                               user_data_text[]
  user_data_textarea                                                           user_data_textarea[]
  user_match                                                                   user_match?
  user_match_chat_msg_userTouser_match_chat_msg_from_user_id                   user_match_chat_msg[]            @relation("userTouser_match_chat_msg_from_user_id")
  user_match_chat_msg_userTouser_match_chat_msg_to_user_id                     user_match_chat_msg[]            @relation("userTouser_match_chat_msg_to_user_id")
  user_match_sport                                                             user_match_sport[]
  user_match_sport_availability                                                user_match_sport_availability[]
  user_match_sport_fields_data                                                 user_match_sport_fields_data[]
  user_merges_userTouser_merges_from_user                                      user_merges[]                    @relation("userTouser_merges_from_user")
  user_merges_userTouser_merges_to_user                                        user_merges[]                    @relation("userTouser_merges_to_user")
  user_oneclick                                                                user_oneclick[]
  user_relationship_userTouser_relationship_user_id_is                         user_relationship[]              @relation("userTouser_relationship_user_id_is")
  user_relationship_userTouser_relationship_user_id_of                         user_relationship[]              @relation("userTouser_relationship_user_id_of")

  @@unique([foid_country, foid_type, foid_number], name: "foid_country_2")
  @@index([country_iso_code], name: "country_iso_code")
  @@index([email], name: "email")
  @@index([foid_country, foid_type, foid_number], name: "foid_country")
  @@index([language_code], name: "language_code")
  @@index([preferred_club_id], name: "preferred_club_id")
}

model user_club_customer_code {
  user_id            BigInt             @db.UnsignedBigInt
  club_id            BigInt             @db.UnsignedBigInt
  customer_code_id   BigInt             @db.UnsignedBigInt
  club               club               @relation(fields: [club_id], references: [id])
  club_customer_code club_customer_code @relation(fields: [customer_code_id], references: [id])
  user               user               @relation(fields: [user_id], references: [id])

  @@id([user_id, customer_code_id])
  @@index([club_id], name: "fk_club")
  @@index([customer_code_id], name: "fk_customer_code")
}

model user_club_member_id {
  club_id   BigInt @db.UnsignedBigInt
  user_id   BigInt @db.UnsignedBigInt
  member_id String @db.VarChar(32)

  @@id([club_id, user_id])
  @@index([member_id], name: "member_id")
}

model user_coupons {
  id                    BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  club_coupon_id        BigInt               @db.UnsignedBigInt
  user_id               BigInt               @db.UnsignedBigInt
  local_issue_date      DateTime             @db.Date
  local_expiration_date DateTime?            @db.Date
  quantity              Int                  @db.UnsignedSmallInt
  quantity_left         Int                  @db.UnsignedSmallInt
  active                user_coupons_active  @default(N)
  deleted               user_coupons_deleted @default(N)
  club_coupon           club_coupon          @relation(fields: [club_coupon_id], references: [id])
  user                  user                 @relation(fields: [user_id], references: [id])

  @@index([club_coupon_id], name: "club_coupon_id")
  @@index([user_id], name: "user_id")
}

model user_data_bool {
  club_id             BigInt               @db.UnsignedBigInt
  user_id             BigInt               @db.UnsignedBigInt
  user_data_config_id BigInt               @db.UnsignedBigInt
  value               user_data_bool_value
  textarea            String?              @db.MediumText
  club                club                 @relation(fields: [club_id], references: [id])
  user_data_config    user_data_config     @relation(fields: [user_data_config_id], references: [id])
  user                user                 @relation(fields: [user_id], references: [id])

  @@id([club_id, user_id, user_data_config_id])
  @@index([user_data_config_id], name: "user_data_config_id")
  @@index([user_id], name: "user_id")
}

model user_data_config {
  id                       BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  name                     String                          @db.VarChar(64)
  description              String?                         @db.VarChar(256)
  type                     user_data_config_type           @default(BOOL)
  allow_textarea           user_data_config_allow_textarea @default(N)
  club_user_data_config    club_user_data_config[]
  user_data_bool           user_data_bool[]
  user_data_options        user_data_options[]
  user_data_options_config user_data_options_config[]
  user_data_text           user_data_text[]
  user_data_textarea       user_data_textarea[]
}

model user_data_options {
  club_id                  BigInt                   @db.UnsignedBigInt
  user_id                  BigInt                   @db.UnsignedBigInt
  user_data_config_id      BigInt                   @db.UnsignedBigInt
  value                    BigInt                   @db.UnsignedBigInt
  textarea                 String?                  @db.MediumText
  club                     club                     @relation(fields: [club_id], references: [id])
  user_data_config         user_data_config         @relation(fields: [user_data_config_id], references: [id])
  user                     user                     @relation(fields: [user_id], references: [id])
  user_data_options_config user_data_options_config @relation(fields: [value], references: [id])

  @@id([club_id, user_id, user_data_config_id])
  @@index([user_data_config_id], name: "user_data_config_id")
  @@index([user_id], name: "user_id")
  @@index([value], name: "value")
}

model user_data_options_config {
  id                  BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  user_data_config_id BigInt              @db.UnsignedBigInt
  value               String              @db.VarChar(64)
  user_data_config    user_data_config    @relation(fields: [user_data_config_id], references: [id])
  user_data_options   user_data_options[]

  @@index([user_data_config_id], name: "user_data_config_id")
}

model user_data_text {
  club_id             BigInt           @db.UnsignedBigInt
  user_id             BigInt           @db.UnsignedBigInt
  user_data_config_id BigInt           @db.UnsignedBigInt
  value               String           @db.VarChar(64)
  textarea            String?          @db.MediumText
  club                club             @relation(fields: [club_id], references: [id])
  user_data_config    user_data_config @relation(fields: [user_data_config_id], references: [id])
  user                user             @relation(fields: [user_id], references: [id])

  @@id([club_id, user_id, user_data_config_id])
  @@index([user_data_config_id], name: "user_data_config_id")
  @@index([user_id], name: "user_id")
}

model user_data_textarea {
  club_id             BigInt           @db.UnsignedBigInt
  user_id             BigInt           @db.UnsignedBigInt
  user_data_config_id BigInt           @db.UnsignedBigInt
  value               String           @db.MediumText
  textarea            String?          @db.MediumText
  club                club             @relation(fields: [club_id], references: [id])
  user_data_config    user_data_config @relation(fields: [user_data_config_id], references: [id])
  user                user             @relation(fields: [user_id], references: [id])

  @@id([club_id, user_id, user_data_config_id])
  @@index([user_data_config_id], name: "user_data_config_id")
  @@index([user_id], name: "user_id")
}

model user_data_type {
  type  String @id @db.VarChar(16)
  table String @db.VarChar(64)
}

model user_email_change_request {
  id               BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id          BigInt   @db.UnsignedBigInt
  email_from       String   @db.VarChar(128)
  email_to         String   @db.VarChar(128)
  request_datetime DateTime @db.DateTime(0)
}

model user_match {
  user_id               BigInt            @id @db.UnsignedBigInt
  utc_creation_datetime DateTime          @db.DateTime(0)
  active                user_match_active @default(Y)
  user                  user              @relation(fields: [user_id], references: [id])
}

model user_match_chat_msg {
  id                                          BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  match_user_challenge_id                     BigInt                        @db.UnsignedBigInt
  from_user_id                                BigInt                        @db.UnsignedBigInt
  to_user_id                                  BigInt                        @db.UnsignedBigInt
  msg                                         String                        @db.Text
  utc_created_datetime                        DateTime                      @db.DateTime(0)
  delivered                                   user_match_chat_msg_delivered @default(N)
  utc_datetime_delivered                      DateTime?                     @db.DateTime(0)
  utc_datetime_email_sent                     DateTime?                     @db.DateTime(0)
  user_userTouser_match_chat_msg_from_user_id user                          @relation("userTouser_match_chat_msg_from_user_id", fields: [from_user_id], references: [id])
  match_user_challenge                        match_user_challenge          @relation(fields: [match_user_challenge_id], references: [id])
  user_userTouser_match_chat_msg_to_user_id   user                          @relation("userTouser_match_chat_msg_to_user_id", fields: [to_user_id], references: [id])

  @@index([from_user_id], name: "from_user_id")
  @@index([match_user_challenge_id], name: "match_user_challenge_id")
  @@index([to_user_id], name: "to_user_id")
}

model user_match_sport {
  user_id                    BigInt                  @db.UnsignedBigInt
  sport_id                   BigInt                  @db.UnsignedBigInt
  utc_creation_datetime      DateTime                @db.DateTime(0)
  utc_last_modified_datetime DateTime                @db.DateTime(0)
  active                     user_match_sport_active
  sport                      sport                   @relation(fields: [sport_id], references: [id])
  user                       user                    @relation(fields: [user_id], references: [id])

  @@id([user_id, sport_id])
  @@index([sport_id], name: "sport_id")
}

model user_match_sport_availability {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  sport_id    BigInt   @db.UnsignedBigInt
  user_id     BigInt   @db.UnsignedBigInt
  geo_city_id BigInt   @db.UnsignedBigInt
  day_of_week Int      @db.UnsignedTinyInt
  start_time  DateTime @db.Time(0)
  end_time    DateTime @db.Time(0)
  geo_city    geo_city @relation(fields: [geo_city_id], references: [id])
  sport       sport    @relation(fields: [sport_id], references: [id])
  user        user     @relation(fields: [user_id], references: [id])

  @@index([geo_city_id], name: "geo_city_id")
  @@index([sport_id], name: "sport_id")
  @@index([user_id], name: "user_id")
}

model user_match_sport_fields_data {
  id                          BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  sport_id                    BigInt                   @db.UnsignedBigInt
  user_id                     BigInt                   @db.UnsignedBigInt
  match_sport_field_id        BigInt                   @db.UnsignedBigInt
  match_sport_field_option_id BigInt                   @db.UnsignedBigInt
  match_sport_field           match_sport_field        @relation(fields: [match_sport_field_id], references: [id])
  match_sport_field_option    match_sport_field_option @relation(fields: [match_sport_field_option_id], references: [id])
  sport                       sport                    @relation(fields: [sport_id], references: [id])
  user                        user                     @relation(fields: [user_id], references: [id])

  @@index([match_sport_field_id], name: "match_sport_field_id")
  @@index([match_sport_field_option_id], name: "match_sport_field_option_id")
  @@index([sport_id], name: "sport_id")
  @@index([user_id], name: "user_id")
}

model user_membership {
  user_id         BigInt @db.UnsignedBigInt
  membership_code String @db.VarChar(16)
  account_id      String @db.VarChar(32)

  @@id([user_id, membership_code])
}

model user_merges {
  id                               BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                          BigInt   @db.UnsignedBigInt
  from_user                        BigInt   @db.UnsignedBigInt
  to_user                          BigInt   @db.UnsignedBigInt
  local_datetime                   DateTime @db.DateTime(0)
  club                             club     @relation(fields: [club_id], references: [id])
  user_userTouser_merges_from_user user     @relation("userTouser_merges_from_user", fields: [from_user], references: [id])
  user_userTouser_merges_to_user   user     @relation("userTouser_merges_to_user", fields: [to_user], references: [id])

  @@index([club_id], name: "club_id")
  @@index([from_user], name: "from_user")
  @@index([to_user], name: "to_user")
}

model user_oneclick {
  id                             BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                        BigInt                          @db.UnsignedBigInt
  email                          String                          @db.VarChar(128)
  creationdatetime               DateTime                        @db.DateTime(0)
  token                          String                          @db.VarChar(64)
  urlwebpay                      String                          @db.VarChar(255)
  tbkuser                        String?                         @db.VarChar(255)
  authorizationcode              String?                         @db.VarChar(6)
  expirationdate                 String?                         @db.VarChar(16)
  creditcardnumber               String?                         @db.VarChar(20)
  creditcardorigin               user_oneclick_creditcardorigin?
  creditcardtype                 String?                         @db.VarChar(20)
  responsecode                   Int?                            @db.TinyInt
  responsedatetime               DateTime?                       @db.DateTime(0)
  enrolled                       Boolean                         @default(false)
  source                         user_oneclick_source            @default(process)
  removeddatetime                DateTime?                       @db.DateTime(0)
  process_product_id             BigInt?
  process_product_transaction_id BigInt?
  process_club_id                BigInt?
  process_currency_id            BigInt?
  process_amount                 Decimal?                        @db.Decimal(16, 2)
  user                           user                            @relation(fields: [user_id], references: [id])
  webpay_oneclick                webpay_oneclick[]

  @@index([process_product_id], name: "process_product_id")
  @@index([process_product_transaction_id], name: "process_product_transaction_id")
  @@index([user_id], name: "user_id")
}

model user_profile_picture {
  user_id              BigInt  @id @db.UnsignedBigInt
  profile_picture_data Bytes?  @db.MediumBlob
  content_type         String? @db.VarChar(64)
  filename             String? @db.VarChar(256)
}

model user_relationship {
  user_id_is                              BigInt                  @db.UnsignedBigInt
  user_id_of                              BigInt                  @db.UnsignedBigInt
  urtid                                   BigInt?                 @db.UnsignedBigInt
  user_relationship_type                  user_relationship_type? @relation(fields: [urtid], references: [id])
  user_userTouser_relationship_user_id_is user                    @relation("userTouser_relationship_user_id_is", fields: [user_id_is], references: [id])
  user_userTouser_relationship_user_id_of user                    @relation("userTouser_relationship_user_id_of", fields: [user_id_of], references: [id])

  @@id([user_id_is, user_id_of])
  @@index([urtid], name: "urtid")
  @@index([user_id_of], name: "user_id_of")
}

model user_relationship_type {
  id                BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  type              String                         @db.VarChar(32)
  reverse_type      String                         @default("") @db.VarChar(32)
  active            user_relationship_type_active? @default(Y)
  club_user_family  club_user_family[]
  user_relationship user_relationship[]
}

model user_review {
  id              BigInt   @id @default(autoincrement())
  user_id         BigInt
  create_datetime DateTime @default(now()) @db.DateTime(0)
  app_version     String?  @db.VarChar(45)
  platform        String?  @db.VarChar(45)
  status          Boolean  @default(false)
}

model user_tentative_match {
  sport_id              BigInt   @db.UnsignedBigInt
  main_user_id          BigInt   @db.UnsignedBigInt
  other_user_id         BigInt   @db.UnsignedBigInt
  utc_creation_datetime DateTime @db.DateTime(0)

  @@id([sport_id, main_user_id, other_user_id])
  @@index([main_user_id], name: "main_user_id")
  @@index([other_user_id], name: "other_user_id")
  @@index([sport_id], name: "sport_id")
}

model user_tentative_match_availability {
  sport_id      BigInt   @db.UnsignedBigInt
  main_user_id  BigInt   @db.UnsignedBigInt
  other_user_id BigInt   @db.UnsignedBigInt
  geo_city_id   BigInt   @db.UnsignedBigInt
  day_of_week   Int      @db.UnsignedTinyInt
  start_time    DateTime @db.Time(0)
  end_time      DateTime @db.Time(0)

  @@id([sport_id, main_user_id, other_user_id, geo_city_id, day_of_week, start_time, end_time])
  @@index([day_of_week], name: "day_of_week")
  @@index([end_time], name: "end_time")
  @@index([geo_city_id], name: "geo_city_id")
  @@index([main_user_id], name: "main_user_id")
  @@index([other_user_id], name: "other_user_id")
  @@index([start_time], name: "start_time")
}

model user_type {
  id                                                                                                  BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  club_id                                                                                             BigInt                             @db.UnsignedBigInt
  name                                                                                                String                             @default("Normal") @db.VarChar(64)
  main                                                                                                user_type_main                     @default(N)
  show_email                                                                                          user_type_show_email               @default(Y)
  show_phone                                                                                          user_type_show_phone               @default(Y)
  require_email                                                                                       user_type_require_email            @default(Y)
  require_phone                                                                                       user_type_require_phone            @default(Y)
  show_gender                                                                                         user_type_show_gender              @default(N)
  show_birth_date                                                                                     user_type_show_birth_date          @default(N)
  require_gender                                                                                      user_type_require_gender           @default(N)
  require_birth_date                                                                                  user_type_require_birth_date       @default(N)
  show_foid                                                                                           user_type_show_foid                @default(Y)
  require_foid                                                                                        user_type_require_foid             @default(N)
  show_address                                                                                        user_type_show_address             @default(N)
  require_city                                                                                        user_type_require_city             @default(N)
  require_address                                                                                     user_type_require_address          @default(N)
  club                                                                                                club                               @relation(fields: [club_id], references: [id])
  club_user_data_config                                                                               club_user_data_config[]
  club_user_relationship                                                                              club_user_relationship[]
  customer_user_type                                                                                  customer_user_type[]
  mandatory_user_type_relationship_mandatory_user_type_relationship_mandatory_user_type_idTouser_type mandatory_user_type_relationship[] @relation("mandatory_user_type_relationship_mandatory_user_type_idTouser_type")
  mandatory_user_type_relationship_mandatory_user_type_relationship_user_type_idTouser_type           mandatory_user_type_relationship[] @relation("mandatory_user_type_relationship_user_type_idTouser_type")

  @@index([club_id], name: "club_id")
}

model valor_uf {
  date  DateTime @id @db.Date
  value Decimal? @db.Decimal(20, 2)
}

model vecinovitacura_cache {
  rut      String   @id @db.VarChar(32)
  date     DateTime @db.DateTime(0)
  esvecino Int      @default(0) @db.UnsignedTinyInt
}

model vessi_config {
  club_id BigInt @id @db.UnsignedBigInt
  apikey  String @db.VarChar(64)
  club    club   @relation(fields: [club_id], references: [id])
}

model webpay {
  id                     BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  product_id             BigInt                @default(1) @db.UnsignedBigInt
  product_transaction_id BigInt                @db.UnsignedBigInt
  currency_id            BigInt                @db.UnsignedBigInt
  amount                 Decimal               @db.Decimal(20, 2)
  payment_status         webpay_payment_status @default(PENDING)
  creation_datetime      DateTime              @db.DateTime(0)
  commerce_code          String                @db.VarChar(12)
  token                  String?               @db.VarChar(64)
  tokenposturl           String?               @db.VarChar(256)
  transaction_datetime   DateTime?             @db.DateTime(0)
  buyorder               String?               @db.VarChar(26)
  sessionid              String?               @db.VarChar(61)
  accountingdate         String?               @db.VarChar(4)
  transactiondate        DateTime?             @db.DateTime(0)
  vci                    String?               @db.VarChar(3)
  urlredirection         String?               @db.VarChar(256)
  cardnumber             String?               @db.VarChar(16)
  cardexpirationdate     String?               @db.VarChar(4)
  authorizationcode      String?               @db.VarChar(6)
  paymenttypecode        String?               @db.VarChar(2)
  responsecode           Int?                  @db.TinyInt
  sharesnumber           Int?                  @db.TinyInt
  commercecode           String?               @db.VarChar(12)
  mallbuyorder           String?               @db.VarChar(26)
  bin                    String?               @db.Char(6)

  @@index([product_transaction_id], name: "booking_id")
}

model webpay_config {
  club_id      BigInt @id @db.UnsignedBigInt
  commercecode String @db.VarChar(12)
  club         club   @relation(fields: [club_id], references: [id])
}

model webpay_oneclick {
  id                     BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  buyorder               String                         @unique @db.VarChar(17)
  user_oneclick_id       BigInt                         @db.UnsignedBigInt
  product_id             BigInt                         @default(1) @db.UnsignedBigInt
  product_transaction_id BigInt                         @db.UnsignedBigInt
  currency_id            BigInt                         @db.UnsignedBigInt
  amount                 Decimal                        @db.Decimal(16, 2)
  payment_status         webpay_oneclick_payment_status
  creation_datetime      DateTime                       @db.DateTime(0)
  commerce_code          String                         @db.VarChar(12)
  transaction_datetime   DateTime?                      @db.DateTime(0)
  authcode               String?                        @db.VarChar(6)
  paymenttype            String?                        @db.Char(2)
  responsecode           Int?                           @db.TinyInt
  sharesnumber           Int?                           @db.TinyInt
  shareamount            Decimal?                       @db.Decimal(16, 2)
  settlementdate         String?                        @db.VarChar(255)
  authorizationdate      String?                        @db.VarChar(255)
  bin                    String?                        @db.Char(6)
  reversecode            String?                        @db.VarChar(32)
  user_oneclick          user_oneclick                  @relation(fields: [user_oneclick_id], references: [id])

  @@index([product_id, product_transaction_id], name: "product_id")
  @@index([user_oneclick_id], name: "user_oneclick_id")
}

model webpay_oneclick_buyorder {
  buyorder       String   @id @db.VarChar(17)
  local_datetime DateTime @db.DateTime(0)
  correlative    Int      @db.SmallInt
}

model webpay_oneclick_config {
  club_id      BigInt  @id @db.UnsignedBigInt
  commercecode String  @db.VarChar(12)
  max_amount   Decimal @default(50000.00) @db.Decimal(20, 2)
  club         club    @relation(fields: [club_id], references: [id])
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  run_on DateTime @db.DateTime(0)

  @@map("_migrations")
}

enum activities_config_autopay_on_booking {
  Y
  N
}

enum activities_config_active_on_future_bookings {
  Y
  N
}

enum activities_config_unpayed_is_debt {
  Y
  N
}

enum activities_config_app_enabled {
  Y
  N
}

enum activities_config_allow_booking_on_hold {
  Y
  N
}

enum activities_config_allow_instant_payment {
  Y
  N
}

enum activities_config_expire_bookings {
  Y
  N
}

enum activities_config_customer_enabled {
  Y
  N
}

enum activities_config_hide_club_info {
  Y
  N
}

enum activities_config_show_all_bookings {
  Y
  N
}

enum activities_config_teacher_can_book {
  Y
  N
}

enum activities_config_teacher_can_void {
  Y
  N
}

enum activities_config_request_uniform {
  Y
  N
}

enum activities_config_renew_bookings {
  Y
  N
}

enum activities_config_hide_instances_summary {
  Y
  N
}

enum activities_config_allow_user_cancel {
  Y
  N
}

enum activity_frequency {
  WEEKLY
  CUSTOM
  NO
}

enum activity_restart_period {
  NO
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
}

enum activity_prebook_schedule {
  Y
  N
  NR
}

enum activity_flexible_schedule {
  Y
  N
}

enum activity_active {
  Y
  N
}

enum activity_app_enabled {
  Y
  N
}

enum activity_proportional_payment {
  Y
  N
}

enum activity_repeat_monthly {
  Y
  N
}

enum activity_allow_late_start {
  Y
  N
}

enum activity_allow_booking_on_hold {
  Y
  N
}

enum activity_allow_instant_payment {
  Y
  N
}

enum activity_expire_bookings {
  Y
  N
}

enum activity_show_all_bookings {
  Y
  N
}

enum activity_teacher_can_book {
  Y
  N
}

enum activity_teacher_can_void {
  Y
  N
}

enum activity_book_only_once {
  Y
  N
}

enum activity_request_uniform {
  Y
  N
}

enum activity_renew_bookings {
  Y
  N
}

enum activity_hide_instances_summary {
  Y
  N
}

enum activity_show_after_end_date {
  Y
  N
}

enum activity_allow_user_cancel {
  Y
  N
}

enum activity_booking_period {
  INSTANCE
  DAY
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
  ALL
}

enum activity_booking_status {
  BOOKED
  PARTIALLY_PAYED
  PAYED
  CANCELLED
  WAITLIST
}

enum activity_booking_booked_by {
  club
  user
}

enum activity_booking_action_action {
  CREATED
  PARTIALLY_PAYED
  PAYED
  CANCELLED
}

enum activity_booking_attendance_deleted {
  N
  Y
}

enum activity_booking_attendance_action_action {
  Y
  DELETED
}

enum activity_booking_instance_attendance {
  Y
  N
  NR
  WL
  CXL
}

enum activity_booking_instance_attendance_action_action {
  Y
  N
  NR
  WL
  CXL
}

enum activity_booking_uniform_size {
  // 6 @map("6")
  // 8 @map("8")
  // 10 @map("10")
  // 12 @map("12")
  // 14 @map("14")
  // 16 @map("16")
  S
  M
  L
  XL
}

enum activity_booking_uniform_type {
  regular
  goalkeeper
}

enum activity_booking_uniform_gender {
  M
  F
}

enum activity_booking_uniform_status {
  BOOKED
  PAYED
  CANCELLED
}

enum activity_booking_uniform_requested {
  Y
  N
}

enum activity_data_config_type {
  DOUBLE
}

enum activity_data_config_mandatory {
  Y
  N
}

enum activity_data_config_active {
  Y
  N
}

enum activity_detail_status {
  ACTIVE
  CANCELLED
}

enum activity_fee_charge_status {
  BOOKED
  PAYED
  CANCELLED
}

enum activity_instance_status {
  ACTIVE
  CANCELLED
}

enum activity_price_price_for {
  INSTANCE
  TOTAL
}

enum activity_price_active {
  Y
  N
}

enum activity_price_quota_frequency {
  DAY
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
}

enum activity_price_promo_window {
  INSTANCE
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
}

enum activity_price_limit_period_unit {
  DAY
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
}

enum activity_price_app_enabled {
  Y
  N
}

enum activity_price_enroll_fee_period_unit {
  NO
  ONCE
  DAY
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
}

enum activity_price_proportional_unit {
  INSTANCE
  DAY
  MONTH
}

enum activity_price_uniform_included_in_fee {
  Y
  N
}

enum activity_price_amount_frequency {
  INSTANCE
  DAY
  WEEK
  MONTH
  QUARTER
  SEMESTER
  YEAR
  ALL
}

enum admin_role {
  root
  club
}

enum admin_active {
  Y
  N
}

enum admin_file_type {
  video
  pdf
}

enum admin_file_category_type {
  rent
  activity
  other
}

enum ancillary_booking_status {
  BOOKED
  PARTIALLY_PAYED
  PAYED
  USED
  CANCELLED
  EXCHANGED
}

enum ancillary_price_active {
  Y
  N
}

enum announcements_active {
  Y
  N
}

enum booking_status {
  BOOKED
  PARTIALLY_PAYED
  PAYED
  USED
  CANCELLED
  EXCHANGED
}

enum booking_waived {
  Y
  N
}

enum booking_confirmed {
  Y
  N
}

enum booking_noshow {
  Y
  N
}

enum booking_booked_by {
  club
  user
}

enum booking_appos {
  web
  ios
  android
}

enum booking_action_action {
  CREATED
  PARTIALLY_PAYED
  PAYED
  USED
  CANCELLED
  EXCHANGED
}

enum booking_players_status {
  INVITED
  REJECTED
  CONFIRMED
  DELETED
}

enum booking_players_actions_action {
  INVITED
  REJECTED
  CONFIRMED
  DELETED
}

enum booking_players_data_config_type {
  INT
}

enum booking_players_data_config_active {
  Y
  N
}

enum club_has_customer_codes {
  Y
  N
}

enum club_active {
  Y
  N
}

enum club_rent_enabled {
  Y
  N
}

enum club_activities_enabled {
  Y
  N
}

enum club_customer_enabled {
  Y
  N
}

enum club_app_enabled {
  Y
  N
}

enum club_diff_app_price {
  Y
  N
}

enum club_hide_normal_customer {
  Y
  N
}

enum club_ask_for_boleta {
  Y
  N
}

enum club_ask_for_confirmation {
  Y
  N
}

enum club_ask_for_noshow {
  Y
  N
}

enum club_ask_for_fop {
  Y
  N
}

enum club_has_member_id {
  Y
  N
}

enum club_notify_payment {
  Y
  N
}

enum club_allow_browsing {
  Y
  N
}

enum club_request_member_document {
  Y
  N
}

enum club_variable_increments {
  Y
  N
}

enum club_invite_players_by_foid {
  Y
  N
}

enum club_contract_signed {
  Y
  N
}

enum club_debt_mode {
  Y
  N
}

enum club_expire_admin_bookings {
  Y
  N
}

enum club_closed {
  Y
  N
}

enum club_forbid_multiple_bookings_admin {
  Y
  N
}

enum club_coupon_gender {
  M
  F
}

enum club_include_tyc {
  Y
  N
}

enum club_hide_address {
  Y
  N
}

enum club_can_block_customers {
  Y
  N
}

enum club_transactions_report_enabled {
  Y
  N
}

enum club_admin_role {
  owner
  supervisor
  worker
  base
}

enum club_admin_active {
  Y
  N
}

enum club_admin_rent_enabled {
  Y
  N
}

enum club_admin_activities_enabled {
  Y
  N
}

enum club_ancillary_timebound {
  Y
  N
}

enum club_ancillary_active {
  Y
  N
}

enum club_ancillary_online_payment {
  Y
  N
}

enum club_coupon_limit_period_unit {
  DAY
  WEEK
  MONTH
  YEAR
}

enum club_coupon_beneficiary_max_period {
  DAY
  WEEK
  MONTH
  YEAR
}

enum club_coupon_active {
  Y
  N
}

enum club_coupon_deleted {
  Y
  N
}

enum club_coupon_allow_family_usage {
  Y
  N
}

enum club_customer_code_active {
  Y
  N
}

enum club_customer_code_booking_limits_period {
  DAY
  WEEK
  MONTH
  YEAR
}

enum club_invoice_parent_club_payed {
  Y
  N
}

enum club_invoice_club_payed {
  Y
  N
}

enum club_sport_app_enabled {
  Y
  N
}

enum club_sport_rent_config_allow_booking_on_hold {
  Y
  N
}

enum club_sport_rent_config_allow_downpayment {
  Y
  N
}

enum club_sport_rent_config_allow_instant_payment {
  Y
  N
}

enum club_sport_rent_config_allow_changes_before {
  Y
  N
}

enum club_sport_rent_config_expire_free_bookings_min_players {
  Y
  N
}

enum club_sport_rent_config_show_week_schedule {
  Y
  N
}

enum club_sport_rent_config_show_repeat_booking {
  Y
  N
  CHOOSE_DATE
}

enum club_sport_rent_config_mark_noshow_for_void {
  Y
  N
}

enum club_sport_rent_config_price_modifies_ap_days {
  Y
  N
}

enum club_sport_rent_config_gender_pricing {
  Y
  N
}

enum club_sport_rent_config_booking_user_pricing {
  Y
  N
}

enum club_sport_rent_config_coupon_pricing {
  Y
  N
}

enum club_sport_rent_config_age_pricing {
  Y
  N
}

enum club_sport_rent_config_offer_book_for_others {
  NO
  SAME_TIME
  YES
}

enum club_sport_rent_config_price_modifies_min_max_timespan {
  Y
  N
}

enum club_sport_rent_config_expire_admin_bookings {
  Y
  N
}

enum club_sport_rent_config_min_ap_unit {
  MINUTE
  HOUR
  DAY
}

enum club_sport_rent_config_max_ap_unit {
  MINUTE
  HOUR
  DAY
}

enum club_sport_rent_config_force_customer_code {
  Y
  N
}

enum club_sport_rent_config_min_ap_compare_unit {
  MINUTE
  HOUR
  DAY
}

enum club_sport_rent_config_max_ap_compare_unit {
  MINUTE
  HOUR
  DAY
}

enum club_sport_rent_config_price_modifies_capacity {
  Y
  N
}

enum club_sport_rent_config_hide_end_time {
  Y
  N
}

enum club_sport_rent_config_force_logged_invites {
  Y
  N
}

enum club_sport_rent_config_simple_search {
  Y
  N
}

enum club_sport_rent_config_offer_schedule {
  Y
  N
}

enum club_user_blocked {
  Y
  N
}

enum club_user_data_config_mandatory {
  Y
  N
}

enum club_user_data_config_active {
  Y
  N
}

enum club_user_data_config_primary {
  Y
  N
}

enum club_user_member_document_processed {
  Y
  N
}

enum club_user_member_document_rejected {
  Y
  N
}

enum convenio_limit_period_unit {
  DAY
  WEEK
  MONTH
  YEAR
}

enum convenio_active {
  Y
  N
}

enum convenio_deleted {
  Y
  N
}

enum country_config_active {
  Y
  N
}

enum country_fields_config_visible {
  Y
  N
}

enum country_fields_config_mandatory {
  Y
  N
}

enum court_active {
  Y
  N
}

enum court_capacity_enabled {
  Y
  N
}

enum court_app_enabled {
  Y
  N
}

enum court_deleted {
  Y
  N
}

enum court_ownership_enabled {
  Y
  N
}

enum court_date_range_config_active {
  Y
  N
}

enum customer_blocked {
  Y
  N
}

enum custom_product_status {
  BOOKED
  PARTIALLY_PAYED
  PAYED
  CANCELLED
}

enum data_config_type {
  BOOL
  TEXT
  TEXTAREA
  OPTIONS
  FILE
}

enum data_config_allow_textarea {
  N
  Y
}

enum dte_config_provider {
  bsale
  vessi
  ebrain
}

enum enrollment_active {
  Y
  N
}

enum enrollment_deleted {
  Y
  N
}

enum enrollment_accept_tyc {
  Y
  N
}

enum enrollment_data_config_mandatory {
  Y
  N
}

enum enrollment_data_config_active {
  Y
  N
}

enum enrollment_data_config_deleted {
  Y
  N
}

enum enrollment_request_status {
  CREATING
  PENDING
  ACCEPTED
  REJECTED
}

enum enrollment_request_deleted {
  Y
  N
}

enum enrollment_request_data_bool_value {
  Y
  N
}

enum expense_deleted {
  Y
  N
}

enum expo_user_token_active {
  Y
  N
}

enum fedegolf_log_status {
  PENDING
  OK
  VOID
}

enum foid_options_default {
  Y
  N
}

enum fop_app_config_active {
  Y
  N
}

enum invoice_payed {
  Y
  N
}

enum invoicing_data_invoicing_plan {
  APP_PAYED
  ALL
  FIXED
  RANGES
}

enum invoicing_data_invoicing_plus_iva {
  Y
  N
}

enum invoicing_data_generate_invoice {
  Y
  N
}

enum invoicing_data_generate_report {
  Y
  N
}

enum invoicing_data_same_day_uf {
  Y
  N
}

enum invoicing_data_glosa_replaces_nombre_item {
  Y
  N
}

enum invoicing_data_extra_product_type {
  FIXED
  PERCENTAGE
}

enum language_config_active {
  Y
  N
}

enum magnus_caja_club_admin_estado {
  OPEN
  CLOSED
  REPORTED
}

enum magnus_caja_online_estado {
  OPEN
  CLOSED
  REPORTED
}

enum match_sport_config_active {
  Y
  N
}

enum match_sport_field_type {
  single
  multiple
}

enum match_sport_field_display {
  option
  list
}

enum match_sport_ranking_special {
  st @map("1st")
  nd @map("2nd")
  rd @map("3rd")
  outstanding
}

enum match_user_challenge_status {
  CHALLENGED
  ACCEPTED
  DECLINED
  CANCELLED
  NOGO
  EXPIRED
}

enum match_user_challenge_main_user_dismissed {
  Y
  N
}

enum match_user_challenge_other_user_dismissed {
  Y
  N
}

enum match_user_challenge_action_action {
  CHALLENGED
  ACCEPTED
  DECLINED
  CANCELLED
  NOGO
  EXPIRED
}

enum match_user_challenge_notification_medium {
  email
  notification
}

enum match_user_challenge_notification_type {
  rate
}

enum match_user_challenge_rating_played {
  Y
  N
}

enum match_user_challenge_rating_would_play_again {
  Y
  N
  MAYBE
}

enum match_user_challenge_rating_did_someone_win {
  Y
  N
}

enum multiple_product_status {
  BOOKED
  PARTIALLY_PAYED
  PAYED
  CANCELLED
}

enum payment_status {
  PENDING
  APPROVED
  REJECTED
  VOID
  REVERSED
  TBK_VOID
  REFUNDED
}

enum payment_deleted {
  Y
  N
}

enum price_active {
  Y
  N
}

enum price_deleted {
  Y
  N
}

enum price_min_ap_unit {
  MINUTE
  HOUR
  DAY
}

enum price_max_ap_unit {
  MINUTE
  HOUR
  DAY
}

enum price_forbid_user_changes {
  Y
  N
}

enum price_min_ap_compare_unit {
  MINUTE
  HOUR
  DAY
}

enum price_max_ap_compare_unit {
  MINUTE
  HOUR
  DAY
}

enum price_tournament {
  Y
  N
}

enum price_app_enabled {
  Y
  N
}

enum price_ownership_enabled {
  DEFAULT
  Y
  N
}

enum price_for_booking_customer_only_book_for_others {
  Y
  N
}

enum price_for_booking_customer_active {
  Y
  N
}

enum price_for_booking_customer_deleted {
  Y
  N
}

enum price_for_booking_customer_app_enabled {
  Y
  N
}

enum product_invoice_provider {
  bsale
  vessi
  ebrain
  dummy
}

enum recurrent_block_deleted {
  Y
  N
}

enum sport_main {
  Y
  N
}

enum sport_simple_search {
  Y
  N
}

enum sport_invite_players {
  Y
  N
}

enum sport_field_name_gender {
  M
  F
}

enum sport_player_gender {
  M
  F
}

enum square_payment_status {
  PENDING
  APPROVED
  REJECTED
  VOID
  REFUNDED
}

enum square_order_state {
  OPEN
  COMPLETED
  CANCELED
}

enum square_refund_status {
  PENDING
  COMPLETED
}

enum uniform_request_delivery {
  Y
  N
}

enum user_gender {
  M
  F
}

enum user_email_confirmed {
  Y
  N
}

enum user_active {
  Y
  N
}

enum user_terms_accepted {
  Y
  N
}

enum user_appos {
  web
  ios
  android
}

enum user_coupons_active {
  Y
  N
}

enum user_coupons_deleted {
  Y
  N
}

enum user_data_bool_value {
  Y
  N
}

enum user_data_config_type {
  BOOL
  TEXT
  TEXTAREA
  OPTIONS
}

enum user_data_config_allow_textarea {
  N
  Y
}

enum user_match_active {
  Y
  N
}

enum user_match_chat_msg_delivered {
  Y
  N
}

enum user_match_sport_active {
  Y
  N
}

enum user_oneclick_creditcardorigin {
  NATIONAL_CARD
  FOREIGN_CARD
}

enum user_oneclick_source {
  profile
  process
}

enum user_relationship_type_active {
  Y
  N
}

enum user_type_main {
  Y
  N
}

enum user_type_show_email {
  Y
  N
}

enum user_type_show_phone {
  Y
  N
}

enum user_type_require_email {
  Y
  N
}

enum user_type_require_phone {
  Y
  N
}

enum user_type_show_gender {
  Y
  N
}

enum user_type_show_birth_date {
  Y
  N
}

enum user_type_require_gender {
  Y
  N
}

enum user_type_require_birth_date {
  Y
  N
}

enum user_type_show_foid {
  Y
  N
}

enum user_type_require_foid {
  Y
  N
}

enum user_type_show_address {
  Y
  N
}

enum user_type_require_city {
  Y
  N
}

enum user_type_require_address {
  Y
  N
}

enum webpay_payment_status {
  PENDING
  APPROVED
  REJECTED
  VOID
  REVERSED
  TBK_VOID
}

enum webpay_oneclick_payment_status {
  APPROVED
  REJECTED
  REVERSED
}
